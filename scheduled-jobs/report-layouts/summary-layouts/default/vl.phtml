<?php

require_once('tcpdf/tcpdf.php');
require_once('jpgraph/jpgraph.php');
require_once('jpgraph/jpgraph_bar.php');
require_once('jpgraph/jpgraph_line.php');
require_once('jpgraph/jpgraph_scatter.php');
require_once(CRON_PATH . '/General.php');
$general = new General();
//require_once('libchart/classes/libchart.php');
$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
if ($resultArray['shipment'] != "") {

    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports') && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports')) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports');
    }
    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'])) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code']);
    }

    // create new PDF document
    $pdf = new SummaryPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

    // set default header data
    $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

    // set header and footer fonts
    $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
    $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

    // set default monospaced font
    $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

    // set margins
    // if ($methodOfEvaluation == 'iso17043') {
        // $pdf->SetMargins(PDF_MARGIN_LEFT, 55, PDF_MARGIN_RIGHT);
    // }else{
        $pdf->SetMargins(PDF_MARGIN_LEFT, 45, PDF_MARGIN_RIGHT);
    // }
    $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
    $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

    // set auto page breaks
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

    // set image scale factor
    $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

    // set some language-dependent strings (optional)
    if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
        require_once(dirname(__FILE__) . '/lang/eng.php');
        $pdf->setLanguageArray($l);
    }
    $shipmentAttributes = json_decode($resultArray['shipment']['shipment_attributes'], true);
    $methodOfEvaluation = isset($shipmentAttributes['methodOfEvaluation']) ? $shipmentAttributes['methodOfEvaluation'] : 'standard';

    if ($methodOfEvaluation == 'iso17043') {
        $pdf->setSchemeName($header, $resultArray['shipment']['scheme_name'], $logo, $logoRight, $resultStatus, $resultArray['shipment']['scheme_type'], $evalRow['date_finalised'], $config,$trainingInstanceText);
    } else {
        $pdf->setSchemeName($header, $resultArray['shipment']['scheme_name'], $logo, $logoRight, $resultStatus, $resultArray['shipment']['scheme_type'], $evalRow['date_finalised'],"",$trainingInstanceText);
    }
    // add a page
    //$pdf->AddPage();
    // ---------------------------------------------------------

    $pdf->AddPage('P', 'A4');
    $pdf->SetFont('freesans', 'B', 11);

    if ($methodOfEvaluation == 'iso17043') {
        $htmlTitle = '<span style="font-weight: bold;text-align:center;font-size:12;">Proficiency Testing Program for HIV-1 Viral Load using Dried Tube Specimen</span><br><br><span style="font-weight: bold; font-size:12;text-align:center;">All Participants Summary Report</span><br>';
        // $pdf->writeHTMLCell(0, 0, 27, 38, $htmlTitle, 0, 0, 0, true, 'J', true);
        $pdf->writeHTML($htmlTitle, true, false, true, false, '');
    }
    if ($methodOfEvaluation == 'standard') {
        $referenceRes = '<table style="text-align:center;width:100%" align="left">';
        $referenceRes .= '<tr>';
        $referenceRes .= '<td style="font-weight:normal;width:20%;">PT Panel</td><td style="font-weight:normal;width:30%;">' . $resultArray['shipment']['distribution_code'] . '</td>';
        $referenceRes .= '</tr>';
        $referenceRes .= '<tr>';
        $referenceRes .= '<td style="font-weight:normal;width:20%;">Shipment Date</td><td style="font-weight:normal;width:30%;">' . $general->humanDateFormat($resultArray['shipment']['shipment_date']) . '</td>';
        $referenceRes .= '</tr>';
        $referenceRes .= '</table>';
        $pdf->writeHTML($referenceRes, true, false, true, false, '');

        if (count($resultArray['vlCalculation']) > 0) {

            foreach ($resultArray['vlCalculation'] as $vlCal) {

                if (isset($vlCal['participant-count']) && $vlCal['participant-count'] > 6) {
                    if (isset($vlCal['otherAssayName']) && count($vlCal['otherAssayName']) > 0) {
                        continue;
                    } else {
                        $calRes = '<h5>Summary of ' . $vlCal['vlAssay'] . ' Results | No. of Labs : ' . $vlCal['participant-count'] . ' </h5>';
                    }

                    $calRes .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:11px;height:500px;">
                        <tr>
                            <!-- <td style="background-color:#8ECF64;text-align:center;"><br><br>Platform </td> -->
                            <td style="background-color:#8ECF64;text-align:center;"><br><br>Specimen ID </td>
                            <td style="background-color:#8ECF64;text-align:center;width:100px;"><br><br>Mean<br/>(log<sub>10</sub> copies/ml)</td>
                            <td style="background-color:#8ECF64;text-align:center;"><br><br>S.D.</td>
                            <td style="background-color:#8ECF64;text-align:center;">Lowest Acceptable Limit</td>
                            <td style="background-color:#8ECF64;text-align:center;">Highest Acceptable Limit</td>
                            <td style="background-color:#8ECF64;text-align:center;"><br><br>CV</td>
                        </tr>';

                    $countCal = count($vlCal) - 1;
                    $otherList = "";

                    for ($c = 0; $c < $countCal; $c++) {
                        if (isset($vlCal[$c]['mean'])) {
                            $calRes .= '<tr>';
                            $calRes .= '<td>' . $vlCal[$c]['sample_label'] . '</td>
                                    <td style="text-align:center;">' . number_format(round($vlCal[$c]['mean'], 2), 2, '.', '') . '</td>
                                    <td style="text-align:center;">' . number_format(round($vlCal[$c]['sd'], 2), 2, '.', '') . '</td>
                                    <td style="text-align:center;">' . number_format(round($vlCal[$c]['low_limit'], 2), 2, '.', '') . '</td>
                                    <td style="text-align:center;">' . number_format(round($vlCal[$c]['high_limit'], 2), 2, '.', '') . '</td>
                                    <td style="text-align:center;">' . number_format(round($vlCal[$c]['cv'], 2), 2, '.', '') . '</td>
                                </tr>';
                        }
                    }

                    $calRes .= '</table>';

                    $pdf->writeHTML($calRes, true, false, true, false, '');
                }
            }
        }

        $footerHead = '<h5>0.00 = Target Not Detected or less than lower limit of detection</h5>';
        $footerHead .= '<small>Notes:<ol><li>Results from participants using Biocentric and "Other" Platforms were not used for results evaluation due to less than 6 participating labs in this PT event.</li><li>A VL platform with the most participants was used as a reference value to evaluate results for VL platforms with less than 6 participants on this PT round.</li></ol></small>';
        $pdf->writeHTML($footerHead, true, false, true, false, '');
    } else if ($methodOfEvaluation == 'iso17043') {
    
        if (count($resultArray['vlCalculation']) > 0) {

            $referenceRes = '<table style="text-align:center;width:100%" align="left">';
            $referenceRes .= '<tr>';
            $referenceRes .= '<td style="font-weight:bold;">PT Panel Name and Results Due Date : <span style="font-weight:normal;">' . $resultArray['shipment']['distribution_code'] . '(' . $general->humanDateFormat($resultArray['shipment']['lastdate_response']) . ')</span></td>';
            $referenceRes .= '</tr>';
            $referenceRes .= '</table>';
            $pdf->writeHTML($referenceRes, true, false, true, false, '');
            $sample = array();
            $assayNameTxt = "";
            $noOfPaResponseTxt = "";
            foreach ($resultArray['vlCalculation'] as $vlCal) {
                // Zend_Debug::dump($vlCal);die;
                if (isset($vlCal['participant-count']) && $vlCal['participant-count'] < 18 || $vlCal['vlAssay'] == "Other") {
                    $t = 0;

                    foreach ($vlCal as $k => $val) {

                        if (isset($val['median'])) {

                            $sample[$k]['response']       += $val['no_of_responses'];
                            $sample[$k]['median']         += $val['median'];
                            $sample[$k]['lowLimit']       += $val['low_limit'];
                            $sample[$k]['highLimit']      += $val['high_limit'];
                            $sample[$k]['sd']             += $val['sd'];
                            $sample[$k]['NumberPassed']   += $val['NumberPassed'];
                            $sample[$t]['label']          = $val['sample_label'];
                            $t++;
                        }
                    }
                    // $responseTxt = $val['no_of_responses'];
                    if ($vlCal['vlAssay'] == "Other") {
                        foreach ($vlCal['otherAssayName'] as $otherAssayName => $otherAssayCount) {
                            $assayNameTxt .= 'Other - '. $otherAssayName . '(n=' . $otherAssayCount . '), ';
                        }
                    } else {
                        $assayNameTxt .= $vlCal['vlAssay'] . '(n=' . $vlCal[0]['no_of_responses'] . '), ';
                    }
                } else {
                    $calRes = '<table border="1" style="font-weight:bold;width:650px;">
                                    <tr>
                                        <th colspan="8" style="font-size:12px;"><strong>Platform/Assay Name: </strong><span style="font-weight:normal;">' . $vlCal['vlAssay'] . '</span></th>
                                    </tr>
                                    <tr>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Specimen ID </th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Number of Participants </th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;">Assigned Value<br/>(log<sub>10</sub> copies/ml)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Lower limit <br/>(Q1)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Upper limit <br/>(Q3)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Robust <br/>SD</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;" colspan="2">Participants with <br/>Pass Result <br/>(z < ± 3.0)</th>
                                    </tr>';
                    foreach ($vlCal as $key => $val) {
                        if (isset($val['median'])) {
                            $score = round((($val['NumberPassed'] / $val['no_of_responses']) * 100));

                            $calRes .= '<tr>';
                            $calRes .= '
                                    <td style="font-weight:normal;text-align:center;">' . $val['sample_label'] . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . $val['no_of_responses'] . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . number_format(round($val['median'], 2), 2, '.', '') . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . number_format(round($val['low_limit'], 2), 2, '.', '') . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . number_format(round($val['high_limit'], 2), 2, '.', '') . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . number_format(round($val['sd'], 2), 2, '.', '') . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . $val['NumberPassed'] . '</td>
                                    <td style="font-weight:normal;text-align:center;">' . $score . '%</td>
                                </tr>';
                           /*  $chart[$vlCal['vlAssay']]['response'] =  $val['no_of_responses'];
                            $chart[$vlCal['vlAssay']]['NumberPassed'] =  $score;
                            $chart[$vlCal['vlAssay']]['score'] =  $score;
                            $chart[$vlCal['vlAssay']]['avg'] =  round($val['NumberPassed'] / $val['no_of_responses'], 2); */
                        }
                    }
                    $assayName[] = $vlCal['vlAssay'];
                    $calRes .= '</table>';

                    $pdf->writeHTML($calRes, true, false, true, false, '');
                }
            }
            if (isset($sample) && count($sample) > 0) {
                $platform = 'VL platforms with < 18 participants';
                $calRes = '<table border="1" style="font-weight:bold;width:650px;">
                                    <tr>
                                        <th colspan="8" style="font-size:12px;font-weight:normal;"><strong>Platform/Assay Name: </strong>VL platforms with < 18 participants</th>
                                    </tr>
                                    <tr>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Specimen ID </th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Number of Participants </th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;">Assigned Value<br/>(log<sub>10</sub> copies/ml)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Lower limit <br/>(Q1)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Upper limit <br/>(Q3)</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;"><br/><br/>Robust <br/>SD</th>
                                        <th style="background-color:#8ECF64;text-align:center;font-size:12px;" colspan="2">Participants with <br/>Pass Result <br/>(z < ± 3.0)</th>
                                    </tr>';
                foreach ($sample as $point => $label) {
                    $score = round((($label['NumberPassed'] / $label['response']) * 100));
                    $calRes .= '<tr>';
                    $calRes .= '
                            <td style="font-weight:normal;text-align:center;">' . $label['label'] . '</td>
                            <td style="font-weight:normal;text-align:center;">' . $label['response'] . '</td>
                            <td style="font-weight:normal;text-align:center;">' . number_format(round($label['median'], 2), 2, '.', '') . '</td>
                            <td style="font-weight:normal;text-align:center;">' . number_format(round($label['lowLimit'], 2), 2, '.', '') . '</td>
                            <td style="font-weight:normal;text-align:center;">' . number_format(round($label['highLimit'], 2), 2, '.', '') . '</td>
                            <td style="font-weight:normal;text-align:center;">' . number_format(round($label['sd'], 2), 2, '.', '') . '</td>
                            <td style="font-weight:normal;text-align:center;">' . $label['NumberPassed'] . '</td>
                            <td style="font-weight:normal;text-align:center;">' . $score . '%</td>
                        </tr>';
                    $noOfPaResponseTxt = $label['response'];
                    /* $chart[$platform]['response'] =  $label['response'];
                    $chart[$platform]['NumberPassed'] =  $score;
                    $chart[$platform]['score'] =  $score;
                    $chart[$platform]['avg'] =  round($label['NumberPassed'] / $label['response'], 2); */
                }
                $assayName[] = 'VL platforms with < 18 participants';
                $calRes .= '</table>';
                $pdf->writeHTML($calRes, true, false, true, false, '');
            }
        }

        $note = '<h5>Number of Participants for each VL platform with less than 18 participants (Total ' . $noOfPaResponseTxt . '):</h5>';
        $note .= '<span style="text-align:justify;font-size:9;font-weight:normal;">' . $assayNameTxt . '</span>';

        $pdf->writeHTML($note, true, false, true, false, '');

        $pdf->AddPage();

        /* JPGraph start */
        if (isset($resultArray['vlAssayRes']) && count($resultArray['vlAssayRes']) > 0) {
            $key18Last = array_key_last($assayName);
            foreach ($resultArray['vlAssayRes'] as $key=>$data) {
                if ($methodOfEvaluation == 'iso17043') {
                    if (isset($data['no_of_responses']) && $data['no_of_responses'] < 18 || $data['assay_name'] == "Other") {
                        $noOfPaResponse[$key18Last] += (int)$data['no_of_responses'];
                        $participantScore[$key18Last] += (int)$data['numberPassed'];
                        $scoreBelow[$key18Last] += (int)$data['numberFailed'];
                        $avg[$key18Last] = number_format(($participantScore[$key18Last] / $noOfPaResponse[$key18Last]) * 100,2);
                    }else{
                        $noOfPaResponse[] = $data['no_of_responses'];
                        $participantScore[] = $data['numberPassed'];
                        $scoreBelow[] = $data['numberFailed'];
                        $avg[] = number_format(($data['numberPassed'] / $data['no_of_responses']) * 100,2);
                    }
                }
            }
        } else{
            $noOfPaResponse = array(0);
            $participantScore = array(0);
            $scoreBelow = array(0);
            $avg=array(0,0,0);
        }

        /* JPGraph start */
        // Create the graph and specify the scale for both Y-axis
        $graph = new Graph(700,600);
        $graph->SetScale("textlin");
        // $graph->SetY2Scale("lin");
        $graph->SetY2Scale("lin",0,90);
        $graph->SetY2OrderBack(false);
        $graph->SetShadow();
        
        // Adjust the margin
        $graph->img->SetMargin(55,55,5,150);
        
        $graph->ygrid->SetFill(false);
        $graph->xaxis->SetTickLabels($assayName);
        
        // Create the two linear plot
        $lineplot2=new ScatterPlot($avg);
        $lineplot2->mark->SetType(MARK_IMG,ROOT_PATH.'/images/scatter.gif',1.0);
        $lineplot2->mark->SetSize(2);
        $lineplot2->SetWeight(10);
        $lineplot2->SetLegend('% of Participants scoring "100%"');
        $graph->AddY2($lineplot2);
        
        $graph->title->Set("All Participants Results Summary", 20);
        
        $graph->yaxis->title->Set('Number of participants', 'center');
        $graph->yaxis->title->SetMargin(8); 
        $graph->yscale->SetAutoMax(120);
        $graph->yscale->SetAutoMin(0);
        
        $graph->y2axis->title->Set('% of Participants scoring "100%"');
        $graph->y2axis->title->SetMargin(8); 
        $graph->y2scale->SetAutoMax(100);
        $graph->y2scale->SetAutoMin(0);
        // Add the plot to the graph
        
        
        // Create the bar plots
        $b1plot = new BarPlot($noOfPaResponse);
        $b2plot = new BarPlot($participantScore);
        $b3plot = new BarPlot($scoreBelow);
        
        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot,$b2plot,$b3plot));
        $graph->Add($gbplot);
        
        $b1plot->SetColor("#1471c1");
        $b1plot->SetFillColor("#1471c1");
        $b1plot->SetLegend("Number of Participants Submitted Results");
        
        $b2plot->SetColor("#92d14f");
        $b2plot->SetFillColor("#92d14f");
        $b2plot->SetLegend('Number of Participants Scoring "100%"');
        
        $b3plot->SetColor("#fbda66");
        $b3plot->SetFillColor("#fbda66");
        $b3plot->SetLegend('Number of Participants Scoring Below "100%"');
        
        $graph->legend->SetFrameWeight(1);
        $graph->legend->SetColumns(2);
        
        $band = new PlotBand(VERTICAL,BAND_RDIAG,11,"max",'khaki4');
        $band->ShowFrame(true);
        $band->SetOrder(DEPTH_BACK);
        $graph->Add($band);
        
        $image_file = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'bar_yaxis_chart.png';
        $graph->Stroke($image_file);
        
        $pdf->Image($image_file, 5, $pdf->getY(), '', '', '', '', '', false, 300);
        if (file_exists($image_file)) {
            unlink($image_file);
        }

        $pdf->AddPage();
        /* JPGraph end */
        $note = '<h5>Information with respect to compliance with standards ISO 13528:2015(E) Preparation of Proficiency Test items:</h5>';
        $note .= '<span style="text-align:justify;font-size:10;font-weight:normal;">The proficiency test items were prepared by trained staff using inactivated cultured HIV-1, following institutional SOPs. The PT samples were issued with instructions to report on detection using routine methods.  The PT samples were tested for homogeneity prior to shipment and met program requirements.</span>';

        $note .= '<h5>Procedures used to establish the assigned value:</h5>';
        $note .= '<span style="text-align:justify;font-size:10;font-weight:normal;">The results of participating laboratories using the same VL platform were grouped together and analyzed for peer-comparison using the Normalized interquartile range (nIQR) method. Assigned value, Robust Standard Deviation, Standard Uncertainty of assigned value, z score and performance score were derived as per the Standard ISO13528: 2015(E). A VL platform with the most participants was used as a reference value to evaluate results for VL platforms with less than eighteen participants in this PT round.</span>';

        $note .= '<h5>Subcontracting:</h5>';
        $note .= '<span style="text-align:justify;font-size:10;font-weight:normal;">Only the transport of PT items is subcontracted.<br/> The identities of participants are kept confidential and known only to the staff involved in the implementation of the Proficiency Testing.  In order to ensure anonymity in this final report, each participant has been assigned a unique identification number.</span>';
        if (isset($resultArray['shipment']['pt_co_ordinator_name']) && $resultArray['shipment']['pt_co_ordinator_name'] != "") {
            $html .= '<br/><hr>';
            $html .= '<span style="text-align:center;font-weight:normal;"><small>Report approved by ' . $resultArray['shipment']['pt_co_ordinator_name'] . '</small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>Date of approval: ' . (isset($pdf->dateTime) ? $general->humanDateFormat($pdf->dateTime) : date('d M Y')) . '</small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small><i>This is a system generated report. No signature required</i></small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>– End of Final Report –</small></span>';
        }
        $pdf->writeHTML($note, true, false, true, false, '');

        if (isset($resultArray['shipment']['pt_co_ordinator_name']) && $resultArray['shipment']['pt_co_ordinator_name'] != "") {
            $html = '<br/><hr>';
            $html .= '<span style="text-align:center;font-weight:normal;"><small>Report approved by ' . $resultArray['shipment']['pt_co_ordinator_name'] . '</small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>Date of approval: ' . (isset($pdf->dateTime) ? $general->humanDateFormat($pdf->dateTime) : date('d M Y')) . '</small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small><i>This is a system generated report. No signature required</i></small></span>';
            $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>– End of final report –</small></span>';
            $pdf->writeHTML($html, true, false, true, false, '');
        }
    }


    $uncalculatedAssayList = null;
    //Zend_Debug::dump($resultArray['pendingAssay']);die;
    // if(isset($resultArray['pendingAssay']['count']) && ($resultArray['pendingAssay']['count'])>0){

    //     if($pdf->getY()>=250){
    //         $pdf->AddPage();
    //     }
    //     $unCalRes='<h5>Summary of Other Results | No. of Labs : '.$resultArray['pendingAssay']['count'].' </h5>';
    //     $unCalRes.='<table cellpadding="6" border="1" style="text-align:left;font-weight:normal;width:660px;font-size:11px;"><tr><td>'.implode(", ",$resultArray['pendingAssay']['assayNames']).' platforms were not analyzed or graded due to less than 6 participating labs using the same platform.</td></tr></table>';

    //     $pdf->writeHTML($unCalRes, true, false, true, false, '');            

    // }


    //Close and output PDF document
    $fileName = $resultArray['shipment']['shipment_code'] . "-summary.pdf";
    $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
    //$pdf->Output('example_003.pdf', 'I');
    $pdf->Output($filePath, "F");
    if($trainingInstance == "yes"){
        //Watermark section
        $pdf= new PDF_Rotate();
    }
    //============================================================+
    // END OF FILE
    //============================================================+
}
