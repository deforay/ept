<?php
require_once('tcpdf/tcpdf.php');
require_once('jpgraph/jpgraph.php');
require_once('jpgraph/jpgraph_bar.php');
require_once('jpgraph/jpgraph_pie.php');
require_once('jpgraph/jpgraph_line.php');
require_once(CRON_PATH . DIRECTORY_SEPARATOR . 'General.php');
$general = new General();

$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
if ($resultArray['shipment'] != "") {

    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports') && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports')) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports');
    }
    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'])) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code']);
    }

    // create new PDF document
    $pdf = new SummaryPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

    // set default header data
    $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

    // set header and footer fonts
    $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
    $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

    // set default monospaced font
    $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

    // set margins    

    $pdf->SetMargins(PDF_MARGIN_LEFT, 50, PDF_MARGIN_RIGHT);
    $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
    $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

    // set auto page breaks
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

    // set image scale factor
    $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

    // set some language-dependent strings (optional)
    if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
        require_once(dirname(__FILE__) . '/lang/eng.php');
        $pdf->setLanguageArray($l);
    }

    $pdf->setSchemeName($header, $resultArray['shipment']['scheme_name'], $logo, $logoRight, $resultStatus, $resultArray['shipment']['scheme_type'], $evalRow['date_finalised'], $config, $trainingInstanceText, "", $instituteAddressPosition);
    // add a page
    $pdf->AddPage('P', 'A4');
    /* Set Font */
    $pdf->SetFont('helvetica', 'B', 12);
    if (count($resultArray['shipment']['referenceResult']) > 0) {

        $referenceRes = '<table style="text-align:center;width:100%" align="left">';
        $referenceRes .= '<tr>';
        $referenceRes .= '<td style="font-weight:normal;width:50%;font-size:12px;"><span style="font-weight:bold;">PT Survey</span><br>' . $resultArray['shipment']['distribution_code'] . ' (' . $general->humanDateFormat($resultArray['shipment']['shipment_date']) . ')</td>';
        $referenceRes .= '<td style="font-weight:normal;width:50%;font-size:12px;padding-left:20px;"><span style="font-weight:bold;">Shipment Code</span><br>' . $resultArray['shipment']['shipment_code'] . '</td>';
        $referenceRes .= '</tr>';
        $referenceRes .= '</table>';

        $pdf->writeHTML($referenceRes, true, false, true, false, '');
    }
    if (isset($resultArray['shipment']['summaryResult']) && count($resultArray['shipment']['summaryResult']) > 0) {
        $pass = $config->evaluation->dts->passPercentage;
        $abovePass = sprintf("above $pass");
        /* declare variables */
        $barPoints["0 - 59"] = 0;
        $barPoints["60 - 69"] = 0;
        $barPoints["70 - $pass"] = 0;
        $barPoints[$abovePass] = 0;
        $reported = 0;

        foreach ($resultArray['shipment']['summaryResult'] as $result) {
            $reported = (isset($result['correctCount'][0]['reported_count']) && $result['correctCount'][0]['reported_count'] > 0) ? $result['correctCount'][0]['reported_count'] : 0;
            $maxScore = 0;
            $belowScore = 0;
            $partCount = count($result) - 1;
            for ($i = 0; $i < $partCount; $i++) {
                if ($result[$i]['is_excluded'] == 'yes') {
                    continue;
                }
                $barPoints["0 - 59"] += $result[$i]['0-59'];
                $barPoints["60 - 69"] += $result[$i]['60-69'];
                $barPoints["70 - $pass"] += $result[$i]["70-$pass"];
                $barPoints[$abovePass] += $result[$i][$abovePass];
                $maxScore += $result[$i]['number_passed'];
                $belowScore += $result[$i]['number_failed'];
            }
        }
        // JPGraph Charts
        $total = 0;
        foreach ($barPoints as $key => $val) {
            $dataX[] = $val;
            $dataY[] = $key . ' (n=' . $val . ')';
            $total += $val;
        }

        // Create the graph. These two calls are always required
        $graph = new Graph(700, 400, 'auto');
        $graph->SetScale("textlin");

        $theme_class = new UniversalTheme;
        $graph->SetTheme($theme_class);
        $graph->SetBox(false);

        $graph->ygrid->SetFill(false);
        $graph->xaxis->SetTickLabels($dataY);
        $graph->xaxis->SetTextLabelInterval(1);
        if (sizeof($dataY) > 3) {
            $graph->xaxis->SetLabelAngle(05);
        }
        $graph->yaxis->HideLine(false);
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot($dataX);

        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));
        // ...and add it to the graPH
        $graph->Add($gbplot);


        $b1plot->SetColor("white");
        $b1plot->SetFillColor(array('brown4', 'hotpink', 'yellow', 'darkgreen'));

        // Setup the titles
        $graph->title->Set("Comparison of test performance between participating laboratories (N=" . $total . ")");

        $graph->xaxis->title->Set('% Score');
        $graph->xaxis->SetTitleMargin(35);
        // Turn the tick mark out from the plot area
        $graph->xaxis->SetTickSide(SIDE_DOWN);

        $graph->yaxis->title->Set('Number of participants', 'center');
        $graph->yaxis->SetTitleMargin(28);
        // Turn the tick mark out from the plot area
        $graph->yaxis->SetTickSide(SIDE_LEFT);

        // Display the graph
        $image_file = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'bar_chart.png';
        $graph->Stroke($image_file);

        // set font
        $pdf->SetFont('helvetica', 'B', 12);


        $overview = '<table border="1" style="font-size:13px;"><tr>';
        $overview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Responses </td>';
        $overview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Participants Scoring >= "' . $config->evaluation->dts->passPercentage . '"</td>';
        $overview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Participants Scoring < "' . $config->evaluation->dts->passPercentage . '" </td>';
        $overview .= '</tr>';


        $overview .= '<tr>';
        $overview .= '<td style="text-align:center;font-weight:normal;">' . $reported . '</td>';
        $overview .= '<td style="text-align:center;font-weight:normal;">' . $maxScore . ' (' . round(($maxScore / $reported) * 100, 2) . '%)</td>';
        $overview .= '<td style="text-align:center;font-weight:normal;">' . $belowScore . ' (' . round(($belowScore / $reported) * 100, 2) . '%)</td>';

        $overview .= '</tr>';

        $overview .= '</table><br/>';
        $pdf->writeHTML($overview, true, false, true, false, '');


        $sampleCount = count($result['correctCount']);

        $sampleCode = '<table border="1" style="font-size:13px;">';
        $sampleCode .= '<tr>';
        $sampleCode .= '<td rowspan="2"></td>';
        $sampleCode .= '<td colspan="' . $sampleCount . '" style="background-color:#dbe4ee;text-align:center;">Sample ID</td>';
        $sampleCode .= '<td></td>';
        $sampleCode .= '</tr>';

        $sampleCode .= '<tr>';

        foreach ($result['correctCount'] as $sample) {
            $sampleCode .= '<td style="background-color:#dbe4ee;text-align:center;">' . $sample['sample_label'] . '</td>';
        }
        $sampleCode .= '<td style="background-color:#dbe4ee;text-align:center;">Average</td>';
        $sampleCode .= '</tr>';
        $sampleCode .= '<tr>';
        $sampleCode .= '<td style="background-color:#dbe4ee;text-align:center;">Expected Result</td>';

        $nonMandatorySamples = array();

        foreach ($resultArray['shipment']['referenceResult'] as $refRes) {

            if ($refRes['mandatory'] == 0) {
                $nonMandatorySamples[] = $refRes['sample_label'];
            }
            $sampleCode .= '<td style="text-align:center;font-weight:normal;">' . ucfirst(strtolower($refRes['referenceResult'])) . '</td>';
        }

        $sampleCode .= '<td></td>';
        $sampleCode .= '</tr>';
        $sampleCode .= '<tr>';
        $sampAvg = '0';
        $sampPerAvg = '0';
        $sampleCode .= '<td style="background-color:#BCD7EC;text-align:center;">Correctly Reported</td>';

        foreach ($result['correctCount'] as $sample) {
            $sampAvg += $sample["correctRes"];
            $sampPerAvg += (($sample["correctRes"] / $partCount) * 100);
            $sampleCode .= '<td style="text-align:center;font-weight:normal;">' . $sample["correctRes"] . '<br>(' . round(($sample["correctRes"] / $partCount) * 100, 2) . '%)</td>';
        }

        $sampleCode .= '<td style="text-align:center;font-weight:normal;">' . round(($sampAvg / $sampleCount), 2) . '<br>(' . round(($sampPerAvg / $sampleCount), 2) . '%)</td>';
        $sampleCode .= '</tr>';


        $sampleCode .= '</table></br>';
        $pdf->writeHTML($sampleCode, true, false, true, false, '');

        if (count($nonMandatorySamples) > 0) {
            $nmsTable = '<span style="font-size:13px;">';
            $nmsTable .= "The following samples have been excluded from this evaluation : " . implode(", ", $nonMandatorySamples);
            $nmsTable .= "</span><br/>";
            $pdf->writeHTML($nmsTable, true, false, true, false, '');
        }


        //----------------Participant Performance Overview  start----------------
        $ppOverview = '<span style="font-size:13px;">Participant Performance Overview</span><br/>';
        $ppOverview .= '<table border="1"  style="font-size:13px;"><tr>';
        $ppOverview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Participants</td>';
        $ppOverview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Responses</td>';
        $ppOverview .= '<td style="background-color:#dbe4ee;text-align:center;"># of Valid Responses</td>';
        $ppOverview .= '<td style="background-color:#dbe4ee;text-align:center;">Average Score</td></tr>';

        $ppOverview .= '<tr>';
        $ppOverview .= '<td style="text-align:center;font-weight:normal;">' . $participantPerformance['total_shipped'] . '</td>';
        $ppOverview .= '<td style="text-align:center;font-weight:normal;">' . $participantPerformance['total_responses'] . '</td>';
        $ppOverview .= '<td style="text-align:center;font-weight:normal;">' . $participantPerformance['valid_responses'] . '</td>';
        $ppOverview .= '<td style="text-align:center;font-weight:normal;">' . round($participantPerformance['average_score'], 2) . '</td>';
        $ppOverview .= '</tr>';

        $ppOverview .= '</table><br>';
        //----------------Participant Performance Overview  Ends----------------

        $pdf->writeHTML($ppOverview, true, false, true, false, '');

        if (count($correctivenessArray) > 0) {
            //----------------Participant Corrective Action Overview  start----------------
            $correctiveActionStuff = '<span style="font-size:13px;">Corrective Action Overview </span><br/>
            <table border="1" style="font-weight:normal;font-size:13px;"><tr style="font-weight:bold;">';
            $correctiveActionStuff .= '<td style="background-color:#dbe4ee;text-align:center;width:75%;">Corrective Action</td>';
            $correctiveActionStuff .= '<td style="background-color:#dbe4ee;text-align:center;width:25%;">Responses having Corrective Action</td>';

            $correctiveActionStuff .= '</tr>';
            foreach ($correctivenessArray as $correctiveness) {
                $correctiveActionStuff .= '<tr>';
                $correctiveActionStuff .= '<td style="text-align:left;">' . $correctiveness['corrective_action'] . '</td>';
                $correctiveActionStuff .= '<td style="text-align:center;">' . $correctiveness['total_corrective'] . '</td>';

                $correctiveActionStuff .= '</tr>';
            }
            $correctiveActionStuff .= '</table><br/>';

            //----------------Participant Corrective Action Overview  Ends----------------

            $pdf->writeHTML($correctiveActionStuff, true, false, true, false, '');
        }
        // $y = $pdf->getY() + 5;

        $pdf->AddPage('P', 'A4');
        if ($resultArray['shipment']['siteChart'] && count($resultArray['shipment']['siteChart']) > 0) {
            $lab = 0;
            $dataX = array();
            $dataY = array();
            foreach ($resultArray['shipment']['siteChart'] as $key => $val) {
                $dataX[] = $val['totalSites'];
                $dataY[] = $val['department_name'] . ' (n=' . $val['totalSites'] . ')';
                $lab += $val['totalSites'];
            }

            // Create the graph. These two calls are always required
            $graph = new Graph(680, 350, 'auto');
            $graph->SetScale("textlin");
            $theme_class = new UniversalTheme;
            $graph->SetTheme($theme_class);

            // $graph->yaxis->SetTickPositions(array(0,30,60,90,120,150));
            $graph->SetBox(false);
            $graph->SetMargin(40, 30, 10, 100);

            $graph->ygrid->SetFill(false);
            $graph->xaxis->SetTickLabels($dataY);
            $graph->xaxis->SetTextLabelInterval(1);
            $graph->xaxis->SetLabelAngle(05);
            $graph->yaxis->HideLine(false);
            $graph->yaxis->HideTicks(false, false);

            // Create the bar plots
            $b1plot = new BarPlot($dataX);

            // Create the grouped bar plot
            $gbplot = new GroupBarPlot(array($b1plot));
            // ...and add it to the graPH
            $graph->Add($gbplot);


            $b1plot->SetColor("white");
            // $b1plot->SetFillGradient("#4B0082","white",GRAD_LEFT_REFLECTION);
            // $b1plot->SetWidth(45);
            $graph->title->Set("Participating laboratories in NEQAS for HIV antibody testing Panel 30 (" . date('m', strtotime($resultArray['shipment']['shipment_date'])) . "/" . date('y', strtotime($resultArray['shipment']['shipment_date'])) . ") (N=" . $lab . ")");
            $graph->xaxis->title->Set('Department');
            $graph->yaxis->title->Set('Number of participants', 'center');

            $graph->yaxis->SetTitleMargin(28);
            $graph->xaxis->SetTitleMargin(35);
            // Turn the tick mark out from the plot area
            $graph->xaxis->SetTickSide(SIDE_DOWN);
            $graph->yaxis->SetTickSide(SIDE_LEFT);

            // Display the graph
            $sitefile = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'site_chart.png';
            $graph->Stroke($sitefile);

            $pdf->Image($sitefile, 10, $pdf->getY(), '', '', '', '', 'C', false, 300);
            if (file_exists($sitefile)) {
                unlink($sitefile);
            }
        }

        $pdf->Image($image_file, 10, $pdf->getY() + 105, '', '', '', '', 'C', false, 300);
        if (file_exists($image_file)) {
            unlink($image_file);
        }
    }
    // Zend_Debug::dump($resultArray['shipment']['pieChart2']);
    if (isset($resultArray['shipment']['pieChart']) && count($resultArray['shipment']['pieChart']) > 0) {
        $dataX = array();
        $dataY = array();
        $total = 0;
        foreach ($resultArray['shipment']['pieChart'] as $key => $val) {
            $dataX[] = $val['testkit1Total'];
            $dataY[] = $val['TestKit_Name'] . ' (n=' . $val['testkit1Total'] . ')';
            $total += $val['testkit1Total'];
        }
        // Create the graph. These two calls are always required
        $graph = new Graph(680, 800, 'auto');
        $graph->SetScale("textlin");

        // $graph->yaxis->SetTickPositions(array(0,30,60,90,120,150));
        $graph->SetBox(false);
        $graph->SetMargin(80, 30, 10, 300);

        $graph->ygrid->SetFill(false);
        $graph->xaxis->SetTickLabels($dataY);
        $graph->xaxis->SetTextLabelInterval(1);
        $graph->xaxis->SetLabelAngle(90);
        $graph->xaxis->SetLabelMargin(0);
        $graph->xaxis->SetPos(0.5, 0.97, 'center', 'bottom');

        $graph->yaxis->HideLine(false);
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot($dataX);
        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));
        // ...and add it to the graPH
        $graph->Add($gbplot);

        $b1plot->SetColor("white");
        $graph->title->Set("Test kits used for Test 1 PT survey " . $resultArray['shipment']['distribution_code'] . "(N=" . $total . ")");
        $graph->yaxis->title->Set('Number of Participants');
        $graph->xaxis->title->Set('Testkit-1 Name');
        $graph->yaxis->SetTitleMargin(35);
        $graph->xaxis->SetTitleMargin(280);
        // Turn the tick mark out from the plot area
        $graph->xaxis->SetTickSide(SIDE_DOWN);
        $graph->yaxis->SetTickSide(SIDE_LEFT);

        $piechart = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $responseResult["shipment_code"] . DIRECTORY_SEPARATOR . 'testkit_chart.png';
        $graph->Stroke($piechart);

        $pdf->Image($piechart, 5, ($pdf->getY() + 200), '', '', '', '', 'C', false, 200);
        if (file_exists($piechart)) {
            unlink($piechart);
        }
    }
    if (isset($resultArray['shipment']['pieChart2']) && count($resultArray['shipment']['pieChart2']) > 0) {
        $dataX = array();
        $dataY = array();
        $total = 0;
        foreach ($resultArray['shipment']['pieChart2'] as $key => $val) {
            $dataX[] = $val['testkit2Total'];
            $dataY[] = $val['TestKit_Name'] . ' (n=' . $val['testkit2Total'] . ')';
            $total += $val['testkit2Total'];
        }
        // Create the graph. These two calls are always required
        $graph = new Graph(680, 800, 'auto');
        $graph->SetScale("textlin");

        // $graph->yaxis->SetTickPositions(array(0,30,60,90,120,150));
        $graph->SetBox(false);
        $graph->SetMargin(80, 30, 10, 320);

        $graph->ygrid->SetFill(false);
        $graph->xaxis->SetTickLabels($dataY);
        $graph->xaxis->SetTextLabelInterval(1);
        $graph->xaxis->SetLabelAngle(90);
        $graph->xaxis->SetLabelMargin(0);
        $graph->xaxis->SetPos(0.5, 0.97, 'center', 'bottom');

        $graph->yaxis->HideLine(false);
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot($dataX);
        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));
        // ...and add it to the graPH
        $graph->Add($gbplot);

        $b1plot->SetColor("white");
        $graph->title->Set("Test kits used for Test 2 PT survey " . $resultArray['shipment']['distribution_code'] . "(N=" . $total . ")");
        $graph->yaxis->title->Set('Number of Participants');
        $graph->xaxis->title->Set('Testkit-2 Name');
        $graph->yaxis->SetTitleMargin(35);
        $graph->xaxis->SetTitleMargin(280);
        // Turn the tick mark out from the plot area
        $graph->xaxis->SetTickSide(SIDE_DOWN);
        $graph->yaxis->SetTickSide(SIDE_LEFT);

        $piechart2 = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $responseResult["shipment_code"] . DIRECTORY_SEPARATOR . 'testkit2_chart.png';
        $graph->Stroke($piechart2);

        $pdf->Image($piechart2, 5, ($pdf->getY() + 200), '', '', '', '', 'C', false, 200);
        if (file_exists($piechart2)) {
            unlink($piechart2);
        }
    }
    if (isset($resultArray['shipment']['pieChart3']) && count($resultArray['shipment']['pieChart3']) > 0) {
        $dataX = array();
        $dataY = array();
        $total = 0;
        foreach ($resultArray['shipment']['pieChart3'] as $key => $val) {
            $dataX[] = $val['testkit3Total'];
            $dataY[] = $val['TestKit_Name'] . ' (n=' . $val['testkit3Total'] . ')';
            $total += $val['testkit3Total'];
        }
        // Create the graph. These two calls are always required
        $graph = new Graph(680, 800, 'auto');
        $graph->SetScale("textlin");

        // $graph->yaxis->SetTickPositions(array(0,30,60,90,120,150));
        $graph->SetBox(false);
        $graph->SetMargin(80, 30, 10, 320);

        $graph->ygrid->SetFill(false);
        $graph->xaxis->SetTickLabels($dataY);
        $graph->xaxis->SetTextLabelInterval(1);
        $graph->xaxis->SetLabelAngle(90);
        $graph->xaxis->SetLabelMargin(0);
        $graph->xaxis->SetPos(0.5, 0.97, 'center', 'bottom');

        $graph->yaxis->HideLine(false);
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot($dataX);
        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));
        // ...and add it to the graPH
        $graph->Add($gbplot);

        $b1plot->SetColor("white");
        $graph->title->Set("Test kits used for Test 3 PT survey " . $resultArray['shipment']['distribution_code'] . "(N=" . $total . ")");
        $graph->yaxis->title->Set('Number of Participants');
        $graph->xaxis->title->Set('Testkit-3 Name');
        $graph->yaxis->SetTitleMargin(35);
        $graph->xaxis->SetTitleMargin(280);
        // Turn the tick mark out from the plot area
        $graph->xaxis->SetTickSide(SIDE_DOWN);
        $graph->yaxis->SetTickSide(SIDE_LEFT);

        $piechart3 = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $responseResult["shipment_code"] . DIRECTORY_SEPARATOR . 'testkit3_chart.png';
        $graph->Stroke($piechart3);

        $pdf->Image($piechart3, 5, ($pdf->getY() + 200), '', '', '', '', 'C', false, 200);
        if (file_exists($piechart3)) {
            unlink($piechart3);
        }
    }

    $pdf->AddPage('P', 'A4');

    if (isset($responseResult) && count($responseResult) > 0  && $responseResult != '') {
        $y = $pdf->getY() + 5;
        $total = $responseResult["total_shipped"];

        $passedN = $responseResult["number_passed"];
        $failedN = $responseResult["number_failed"];
        $notRespondedN = $responseResult["not_responded"];
        $excludedN = $responseResult["excluded"];
        // $late = $responseResult["number_late"];
        $total = $passedN + $failedN + $notRespondedN + $excludedN;

        // Some data
        $passed = number_format((($responseResult["number_passed"] / $total) * 100), 2);
        $failed = number_format((($responseResult["number_failed"] / $total) * 100), 2);
        $notResponded = number_format((($responseResult["not_responded"] / $total) * 100), 2);
        $excluded = number_format((($responseResult["excluded"] / $total) * 100), 2);
        $data = array($passed, $failed, $notResponded, $excluded);
        // Create the Pie Graph.
        $graph = new PieGraph(700, 400);
        $graph->SetShadow();

        // Set A title for the plot
        $graph->title->Set("Shipment Participant Result Report (N=" . $total . ")");
        // $graph->title->SetFont(FF_FONT2,FS_BOLD);

        $p1 = new PiePlot($data);
        $p1->SetLegends(array("Passed (N=" . $passedN . ")", "Failed (N=" . $failedN . ")", "Not Responded (N=" . $notRespondedN . ")", "Excluded (N=" . $excludedN . ")"));
        $graph->legend->SetPos(0.5, 0.97, 'center', 'bottom');
        $graph->legend->SetColumns(3);


        $graph->Add($p1);

        $p1->SetSliceColors(array('forestgreen', 'red', 'gray', 'yellow'));

        $performancePiechart = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $responseResult["shipment_code"] . DIRECTORY_SEPARATOR . 'performanceChart.png';
        $graph->Stroke($performancePiechart);

        $pdf->Image($performancePiechart, 5, $y, '', '', '', '', '', false, 300);
        if (file_exists($performancePiechart)) {
            unlink($performancePiechart);
        }
    }


    if (isset($resultArray['shipment']['participantBeforeAfterDueChart']) && count($resultArray['shipment']['participantBeforeAfterDueChart']) > 0  && $resultArray['shipment']['participantBeforeAfterDueChart'] != '') {
        $pdf->AddPage('P', 'A4');
        $y = $pdf->getY() + 5;
        $val = $resultArray['shipment']['participantBeforeAfterDueChart'];
        // JPGraph Charts
        /* To find the count of not responded participants */
        /* Find by percentage */
        $nors = round(($val['not_responded'] / $val['total_shipped']) * 100, 2);
        /* To find the percentage of before due date score */
        $before = round(($val['beforeDueDate'] / $val['total_shipped']) * 100, 2);
        /* To find the percentage of after due date score */
        $after = round(($val['afterDueDate'] / $val['total_shipped']) * 100, 2);

        // Create the graph. These two calls are always required
        $graph = new Graph(750, 320, 'auto');
        $graph->SetScale("textlin");
        $graph->SetY2Scale("lin", 0, 90);
        $graph->SetY2OrderBack(false);

        $theme_class = new UniversalTheme;
        $graph->SetTheme($theme_class);

        $graph->SetMargin(40, 20, 46, 80);

        $graph->SetBox(false);
        $graph->ygrid->SetFill(false);
        $graph->yaxis->HideLine(false);
        $graph->xaxis->SetTickLabels(array('Before Due Date ' . $before . '% (n=' . $val['beforeDueDate'] . ')', 'After Due Date ' . $after . '% (n=' . $val['afterDueDate'] . ')', 'No Response ' . $nors . '% (n=' . $val['not_responded'] . ')'));
        $graph->xaxis->SetTextLabelInterval(1);
        $graph->yaxis->title->Set('Percentage');
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot(array($before, $after, $val['not_responded']));

        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));

        // ...and add it to the graPH
        $graph->Add($gbplot);

        $b1plot->SetColor("white");
        $b1plot->SetFillColor(array("darkgreen", "red", "gray"));
        // $b1plot->SetLegend(array("Before Due Date","After Due Date"));

        $graph->legend->SetFrameWeight(1);
        $graph->legend->SetColumns(6);
        $graph->legend->SetColor('#4E4E4E', '#00A78A');

        $graph->title->Set('Performance by timeliness (N=' . $val['total_shipped'] . ')');

        // Display the graph
        $performanceBeforeAfterChart = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'before_after_bar_chart.png';
        $graph->Stroke($performanceBeforeAfterChart);

        $pdf->Image($performanceBeforeAfterChart, 5, $y, '', '', '', '', '', false, 300);
        if (file_exists($performanceBeforeAfterChart)) {
            unlink($performanceBeforeAfterChart);
        }
    }
    if ((isset($resultArray['shipment']['participantAberrantDepartmentChart']) && count($resultArray['shipment']['participantAberrantDepartmentChart']) > 0  && $resultArray['shipment']['participantAberrantDepartmentChart'] != '') || (isset($resultArray['shipment']['participantAberrantChart']) && count($resultArray['shipment']['participantAberrantChart']) > 0  && $resultArray['shipment']['participantAberrantChart'] != '')) {
        $pdf->AddPage('P', 'A4');
    }

    if (isset($resultArray['shipment']['participantAberrantChart']) && count($resultArray['shipment']['participantAberrantChart']) > 0  && $resultArray['shipment']['participantAberrantChart'] != '') {
        $val = $resultArray['shipment']['participantAberrantChart'];
        $y = $pdf->getY() + 5;
        $graph = new PieGraph(700, 400);
        $graph->SetShadow();

        // Set A title for the plot
        $graph->title->Set("Aberrant Test Results (N=" . ($val['number_passed'] + $val['number_failed']) . ")");

        $p1 = new PiePlot(array($val['pass_percentage'], $val['fail_percentage']));
        $p1->SetLegends(array('Passed (n=' . $val['number_passed'] . ')', 'Failed (n=' . $val['number_failed'] . ')'));
        $graph->legend->SetPos(0.5, 0.97, 'center', 'bottom');
        $graph->legend->SetColumns(3);
        $graph->Add($p1);

        $p1->SetColor("white");
        $p1->SetSliceColors(array('forestgreen', 'red'));
        $aberrantPiechart = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $responseResult["shipment_code"] . DIRECTORY_SEPARATOR . 'aberrant_test_pass_fail_chart.png';
        $graph->Stroke($aberrantPiechart);

        $pdf->Image($aberrantPiechart, 5, $y, '', '', '', '', 'C', false, 200);
        if (file_exists($aberrantPiechart)) {
            unlink($aberrantPiechart);
        }
    }

    if (isset($resultArray['shipment']['participantAberrantDepartmentChart']['department_name']) && count($resultArray['shipment']['participantAberrantDepartmentChart']['department_name']) > 0  && $resultArray['shipment']['participantAberrantDepartmentChart']['department_name'] != '') {
        $val = $resultArray['shipment']['participantAberrantDepartmentChart'];
        $y = $pdf->getY() + 5;
        // JPGraph Charts
        // Create the graph. These two calls are always required
        $graph = new Graph(750, 320, 'auto');
        $graph->SetScale("textlin");
        $graph->SetY2Scale("lin", 0, 90);
        $graph->SetY2OrderBack(false);

        $theme_class = new UniversalTheme;
        $graph->SetTheme($theme_class);

        $graph->SetMargin(40, 20, 46, 80);

        $graph->SetBox(false);
        $graph->ygrid->SetFill(false);
        $graph->yaxis->HideLine(false);
        $graph->xaxis->SetTickLabels($val['department_name']);
        $graph->xaxis->SetTextLabelInterval(1);
        $graph->yaxis->title->Set('Number of Participants');
        $graph->yaxis->HideTicks(false, false);

        // Create the bar plots
        $b1plot = new BarPlot($val['departmentCount']);

        // Create the grouped bar plot
        $gbplot = new GroupBarPlot(array($b1plot));

        // ...and add it to the graPH
        $graph->Add($gbplot);

        $b1plot->SetColor("white");
        $b1plot->SetFillColor(array("red"));

        $graph->legend->SetFrameWeight(1);
        $graph->legend->SetColumns(6);
        $graph->legend->SetColor('#4E4E4E', '#00A78A');

        $graph->title->Set('Aberrant Test Results (N=' . $val['totalN'] . ')');

        // Display the graph
        $aberrantResultChart = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'aberrnt_result_bar_chart.png';
        $graph->Stroke($aberrantResultChart);

        $pdf->Image($aberrantResultChart, 5, ($y + 120), '', '', '', '', '', false, 300);
        if (file_exists($aberrantResultChart)) {
            unlink($aberrantResultChart);
        }
    }

    //Close and output PDF document
    $fileName = $resultArray['shipment']['shipment_code'] . "-summary.pdf";
    $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
    //$pdf->Output('example_003.pdf', 'I');
    $pdf->Output($filePath, "F");
    if ($trainingInstance == "yes") {
        //Watermark section
        $pdf = new PDF_Rotate();
    }
    //============================================================+
    // END OF FILE
    //============================================================+
}
