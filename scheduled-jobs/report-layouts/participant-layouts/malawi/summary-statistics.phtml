<?php
//----------------Summary Statistics for this survey  start----------------
if (isset($result['statistics']) && !empty($result['statistics'])) {
    $score = (isset($config->evaluation->$schemeType->passPercentage) && !empty($config->evaluation->$schemeType->passPercentage) && $config->evaluation->dts->passPercentage > 0) ? $config->evaluation->$schemeType->passPercentage : '80';
    $ppOverview = '<span style="font-size:12px;font-weight:bold;">Summary Statistics for this survey</span><br/>';
    $ppOverview .= '<table border="1" style="font-size:12px;">';
    $ppOverview .= '<tr style="background-color:#dbe4ee;">';
    $ppOverview .= '    <td style="background-color:#dbe4ee;text-align:center;"># of Providers that responded</td>';
    $ppOverview .= '    <td style="background-color:#dbe4ee;text-align:center;">Providers with 100%</td>';
    $ppOverview .= '    <td style="background-color:#dbe4ee;text-align:center;">Providers with >= ' . $score . '%</td>';
    $ppOverview .= '    <td style="background-color:#dbe4ee;text-align:center;">Providers with < ' . $score . '%</td>';
    $ppOverview .= '    <td style="background-color:#dbe4ee;text-align:center;">Providers that did not Respond</td>';
    $ppOverview .= '</tr>';

    $ppOverview .= '<tr>';
    $ppOverview .= '    <td style="text-align:center;font-weight:normal;">' . $result['statistics']['number_responded'] . '</td>';
    $ppOverview .= '    <td style="text-align:center;font-weight:normal;">' . $result['statistics']['providersWith100'] . '</td>';
    $ppOverview .= '    <td style="text-align:center;font-weight:normal;">' . $result['statistics']['providers>80'] . '</td>';
    $ppOverview .= '    <td style="text-align:center;font-weight:normal;">' . $result['statistics']['providers<80'] . '</td>';
    $ppOverview .= '    <td style="text-align:center;font-weight:normal;">' . $result['statistics']['number_not_responded'] . '</td>';
    $ppOverview .= '</tr>';

    $ppOverview .= '</table><br>';
    $pdf->writeHTML($ppOverview, true, false, true, false, '');
}
if (isset($result['performance1']) && !empty($result['performance1'])) {
    $performance1 = true;
    $dataX = [];
    $dataY = [];
    foreach ($result['performance1'] as $key => $val) {
        $dataX[] = $val['scored'];
        $dataY[] = $val['distribution_code'];
    }
    // Create the graph. These two calls are always required
    $graph = new Graph(680, 200, 'auto');
    $graph->SetScale("textlin");

    $graph->SetBox(false);
    $graph->SetMargin(80, 30, 10, 50);

    $graph->ygrid->SetFill(false);
    $graph->xaxis->SetTickLabels($dataY);
    $graph->xaxis->SetPos(0.5);

    $graph->yaxis->HideLine(false);
    $graph->yaxis->HideTicks(false, false);
    $graph->yaxis->scale->SetAutoMin(0);
    $graph->yaxis->scale->SetAutoMax(100);
    // Create the bar plots
    $b1plot = new BarPlot($dataX);
    // Create the grouped bar plot
    $gbplot = new GroupBarPlot(array($b1plot));
    // ...and add it to the graPH
    $graph->Add($gbplot);
    $b1plot->value->Show();
    $b1plot->value->SetColor("black", "darkred");
    $b1plot->value->SetFormat("%3d%%");

    $b1plot->SetFillColor('#4F81BD');
    $b1plot->SetColor("white");
    $graph->title->Set("Your Performance");
    $graph->subtitle->Set('.');
    $graph->xaxis->title->Set('PT Surveys');
    $graph->yaxis->title->Set('Percentage of Performance');
    $graph->yaxis->SetPos('min');
    $graph->title->SetFont(FF_DEFAULT, FS_BOLD, 10);
    $graph->xaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->yaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->yaxis->SetTitleMargin(40);
    $graph->xaxis->SetTitleMargin(15);
    // Turn the tick mark out from the plot area
    $graph->xaxis->SetTickSide(SIDE_DOWN);
    $graph->yaxis->SetTickSide(SIDE_LEFT);

    $image_file = $reportsPath . DIRECTORY_SEPARATOR . $resultArray['shipment']['shipment_code'] . DIRECTORY_SEPARATOR . 'bar_chart.png';
    $graph->img->SetImgFormat('png'); // Ensure PNG format for better quality
    $graph->img->SetQuality(100); // Set the highest quality
    $graph->Stroke($image_file);
    $pdf->Image($image_file, 5, $pdf->getY(), '', '', '', '', '', false, 600);
    if (file_exists($image_file)) {
        unlink($image_file);
    }
}
if (isset($result['performance2']) && !empty($result['performance2'])) {
    $performance2 = true;
    $data1y = $data2y = $label = [];
    foreach ($result['performance2'] as $row) {
        $data1y[] = $row['passed'];
        $data2y[] = $row['failed'];
        $label[] = $row['sample_label'];
    }
    // Create the graph. These two calls are always required
    $graph = new Graph(680, 200, 'auto');
    $graph->SetScale("textlin");

    $graph->SetBox(false);
    $graph->SetMargin(80, 30, 10, 50);
    $graph->ygrid->SetFill(false);
    $graph->xaxis->SetTickLabels($label);
    $graph->title->SetFont(FF_DEFAULT, FS_BOLD, 10);
    $graph->xaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->yaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->xaxis->HideLine(false);
    $graph->yaxis->HideLine(false);
    $graph->xaxis->HideTicks(false, false);
    $graph->yaxis->HideTicks(false, false);
    $graph->xaxis->SetPos(0.5);

    // Create the bar plots
    $b1plot = new BarPlot($data1y);
    $b2plot = new BarPlot($data2y);
    // Create the grouped bar plot
    $gbplot = new GroupBarPlot(array($b1plot, $b2plot));
    // ...and add it to the graPH
    $graph->Add($gbplot);
    $b1plot->value->Show();
    $b1plot->value->SetColor("black", "darkred");
    $b2plot->value->Show();
    $b2plot->value->SetColor("darkred", "black");
    $b1plot->value->SetFormat("%d");
    $b1plot->SetFillColor("darkgreen");
    $b1plot->SetColor("white");

    $b2plot->SetFillColor("red");
    $b2plot->SetColor("white");

    $b1plot->SetFillColor('#4F81BD');
    $b1plot->SetColor("white");
    $graph->legend->SetShadow('gray@0.4', 5);
    $graph->legend->SetPos(0.5, 0.2, 'center', 'bottom');
    $graph->title->Set("Performance of Current Survey Panels");
    $graph->subtitle->Set('.');
    $graph->yaxis->title->Set('Number of Participants');
    $graph->xaxis->title->Set('Samples');
    $graph->yaxis->SetTitleMargin(40);
    $graph->xaxis->SetTitleMargin(15);
    $graph->xaxis->SetTickSide(SIDE_DOWN);
    $graph->yaxis->SetTickSide(SIDE_LEFT);
    // Display the graph
    $performance_of_current_survey_anels = $reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . 'performance_of_current_survey_anels.png';
    $graph->img->SetImgFormat('png'); // Ensure PNG format for better quality
    $graph->img->SetQuality(100); // Set the highest quality
    $graph->Stroke($performance_of_current_survey_anels);
    $addPoint = 0;
    if ($performance1) {
        $addPoint = 65;
    }
    $pdf->Image($performance_of_current_survey_anels, 5, ($pdf->getY() + $addPoint), '', '', '', '', '', false, 600);
    if (file_exists($performance_of_current_survey_anels)) {
        unlink($performance_of_current_survey_anels);
    }
}
if (isset($result['performance3']) && !empty($result['performance3'])) {
    $performance3 = true;
    $data1y = $data2y = $label = [];
    foreach ($result['performance3'] as $row) {
        $data1y[] = $row['passed'];
        $data2y[] = $row['failed'];
        $label[] = $row['distribution_code'];
    }
    // Create the graph. These two calls are always required
    $graph = new Graph(680, 200, 'auto');
    $graph->SetScale("textlin");

    $graph->SetBox(false);
    $graph->SetMargin(80, 30, 10, 50);
    $graph->ygrid->SetFill(false);
    $graph->xaxis->SetTickLabels($label);
    $graph->title->SetFont(FF_DEFAULT, FS_BOLD, 10);
    $graph->xaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->yaxis->title->SetFont(FF_FONT0, FS_NORMAL, 12);
    $graph->xaxis->HideLine(false);
    $graph->yaxis->HideLine(false);
    $graph->xaxis->HideTicks(false, false);
    $graph->yaxis->HideTicks(false, false);
    $graph->xaxis->SetPos(0.5);

    // Create the bar plots
    $b1plot = new BarPlot($data1y);
    $b2plot = new BarPlot($data2y);
    // Create the grouped bar plot
    $gbplot = new GroupBarPlot(array($b1plot, $b2plot));
    // ...and add it to the graPH
    $graph->Add($gbplot);
    $b1plot->value->Show();
    $b1plot->value->SetColor("black", "darkred");
    $b2plot->value->Show();
    $b2plot->value->SetColor("darkred", "black");
    $b1plot->value->SetFormat("%d");
    $b1plot->SetFillColor("darkgreen");
    $b1plot->SetColor("white");

    $b2plot->SetFillColor("red");
    $b2plot->SetColor("white");

    $b1plot->SetFillColor('#4F81BD');
    $b1plot->SetColor("white");
    $graph->legend->SetShadow('gray@0.4', 5);
    $graph->legend->SetPos(0.5, 0.2, 'center', 'bottom');
    $graph->title->Set("Performance of Surveys");
    $graph->subtitle->Set('.');
    $graph->yaxis->title->Set('Number of Participants');
    $graph->xaxis->title->Set('PT Surveys');
    $graph->yaxis->SetTitleMargin(40);
    $graph->xaxis->SetTitleMargin(15);
    $graph->xaxis->SetTickSide(SIDE_DOWN);
    $graph->yaxis->SetTickSide(SIDE_LEFT);

    // Display the graph
    $performance_of_surveys = $reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . 'performance_of_surveys.png';
    $graph->img->SetImgFormat('png'); // Ensure PNG format for better quality
    $graph->img->SetQuality(100); // Set the highest quality
    $graph->Stroke($performance_of_surveys);
    $addPoint = 0;
    if ($performance1) {
        $addPoint = 65;
    }
    if ($performance2 && !$performance1) {
        $addPoint = 65;
    } else if ($performance2) {
        $addPoint = 130;
    }
    $pdf->Image($performance_of_surveys, 5, ($pdf->getY() + $addPoint), '', '', '', '', 'C', false, 200);
    if (file_exists($performance_of_surveys)) {
        unlink($performance_of_surveys);
    }
}
//----------------Summary Statistics for this survey  Ends----------------