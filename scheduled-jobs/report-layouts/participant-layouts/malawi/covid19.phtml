<?php

require_once(CRON_PATH . DIRECTORY_SEPARATOR . 'Common.php');
$general = new Common();
$schemeType = $resultArray['shipment'][0]['scheme_type'];
// Zend_Debug::dump($resultArray['shipment']);die;
//var_dump($resultArray['shipment'][0]['responseResult'][0]['testPlatform1']);die;
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode = '';
$possibleCovid19Results = $schemeService->getPossibleResults('covid19');
$covid19Results = [];
foreach ($possibleCovid19Results as $pr) {
    $covid19Results[$pr['id']] = ucfirst(strtolower($pr['response']));
}


if (sizeof($resultArray['shipment']) > 0) {

    $totalPages = count($resultArray['shipment']);
    $j = 1;
    //$resultArray['dmResult'];

    foreach ($resultArray['shipment'] as $result) {
        // Zend_Debug::dump($result);die;
        $geneIdentifiedTypes = $schemeService->getAllCovid19IdentifiedGeneTypeResponseWise($result['map_id']);

        $geneDetails = [];
        foreach ($geneIdentifiedTypes as $gene) {
            $geneDetails[$gene['sample_id']][] = $allGeneTypes[$gene['gene_id']] . " = " . $gene['ct_value'];
        }


        if ( /*(isset($result['responseResult'][0]['is_excluded']) && $result['responseResult'][0]['is_excluded'] == 'yes') || */
            (isset($result['responseResult'][0]['is_pt_test_not_performed']) && $result['responseResult'][0]['is_pt_test_not_performed'] == 'yes')
        ) {
            continue;
        }

        //Zend_Debug::dump($result['responseResult'][0]);die;

        if (!file_exists($reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code']) && !is_dir($reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code'])) {
            mkdir($reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code']);
        }
        //error_log($i);
        // Extend the TCPDF class to create custom Header and Footer

        // create new PDF document
        $reportFormat = $reportService->getReportConfigValue('report-format');
        if (isset($reportFormat) && !empty($reportFormat)) {
            $pdf = new FPDIReport(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
            $pdf->setParams($resultStatus, $evalRow['date_finalised'], $config, $watermark, "INDIVIDUAL", $layout, $result['scheme_name']);
        } else {
            $pdf = new IndividualPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
            $pdf->setSchemeName($header, $result['scheme_name'], $logo, $logoRight, $resultStatus, $schemeType, $layout, $evalRow['date_finalised'], $config, $watermark, "", $instituteAddressPosition);
        }

        // set document information
        //$pdf->SetCreator(PDF_CREATOR);
        //$pdf->SetAuthor('ePT');
        //$pdf->SetTitle('DEPARTMENT OF HEALTH AND HUMAN SERVICES');
        //
        //

        // set default header data
        $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

        // set header and footer fonts
        $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // set default monospaced font
        $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // set margins
        $mt = 50;
        if (isset($templateTopMargin) && !empty($templateTopMargin)) {
            $mt = $templateTopMargin;
        }
        $pdf->SetMargins(PDF_MARGIN_LEFT, $mt, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

        // set auto page breaks
        $pdf->SetAutoPageBreak(true, PDF_MARGIN_BOTTOM);

        // set image scale factor
        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);



        // ---------------------------------------------------------

        // set font
        $pdf->SetFont('helvetica', '', 11);

        // add a page
        $pdf->AddPage();
        // ---------------------------------------------------------

        if (trim($result['shipment_date']) != "") {
            $result['shipment_date'] = Pt_Commons_General::humanReadableDateFormat($result['shipment_date']);
        }
        if (trim($result['lastdate_response']) != "") {
            $result['lastdate_response'] = Pt_Commons_General::humanReadableDateFormat($result['lastdate_response']);
        }

        $config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
        $responseDate = "";
        $shipmentTestDate = "";
        $shipmentScore = 0;
        $documentationScore = 0;
        $score = 0;
        $testThreeOptionalDisplay = "";
        $testTwoDisplay = "";

        if (isset($config->evaluation->covid19->covid19MaximumTestAllowed) && ($config->evaluation->covid19->covid19MaximumTestAllowed == '1' || $config->evaluation->covid19->covid19MaximumTestAllowed == '2')) {
            $testThreeOptionalDisplay = "display:none;";
        }

        if (isset($config->evaluation->covid19->covid19MaximumTestAllowed) && $config->evaluation->covid19->covid19MaximumTestAllowed != '3' && $config->evaluation->covid19->covid19MaximumTestAllowed != '2') {
            $testTwoDisplay = "display:none;";
        }

        /* for Shipment attributes functionality start */
        $shipmentAttributes = json_decode($result['shipment_attributes'], true);

        /* for Shipment attributes functionality end */
        if (isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate']) != "") {
            $splitDate = explode(" ", $result['responseResult'][0]['responseDate']);
            $responseDate = Pt_Commons_General::humanReadableDateFormat($splitDate[0]);
        }
        $attributes = '';
        if (isset($result['attributes'])) {
            $attributes = json_decode($result['attributes'], true);
        }

        $sampleRehydrationDate = "";
        if (isset($attributes['sample_rehydration_date']) && trim($attributes['sample_rehydration_date']) != "") {
            $sampleRehydrationDate = Pt_Commons_General::humanReadableDateFormat($attributes['sample_rehydration_date']);
        }
        $shipmentReceiptDate = "";
        if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
            $shipmentReceiptDate = Pt_Commons_General::humanReadableDateFormat($result['responseResult'][0]['shipment_receipt_date']);
        }

        if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
            $shipmentTestDate = Pt_Commons_General::humanReadableDateFormat($result['responseResult'][0]['shipment_test_date']);
        }

        // PT Co-ordinator header details start
        $approveTxt = $result['pt_co_ordinator_name'] ?? $evalRow['saname'];
        $reportType = ($resultStatus == 'finalized') ? 'Finalized' : '';

        $labInfo = '<span style="font-weight:bold;">SARS-CoV-2 Participant ' . $reportType . ' Report</span></br>';
        $labInfo .= '<hr>';
        $labInfo .= '<p style="text-align:right;font-size:11px;">';
        if (isset($result['pt_co_ordinator_name']) && !empty($result['pt_co_ordinator_name'])) {
            $labInfo .= '<b>PT Scheme Manager: </b> ' . $result['pt_co_ordinator_name'] . '<br>';
        }
        if (isset($result['pt_co_ordinator_email']) && !empty($result['pt_co_ordinator_email'])) {
            $labInfo .= '<b>Email: </b> ' . $result['pt_co_ordinator_email'] . '<br>';
        }
        if (isset($result['pt_co_ordinator_phone']) && !empty($result['pt_co_ordinator_phone'])) {
            $labInfo .= '<b>Cell. </b> ' . $result['pt_co_ordinator_phone'] . '<br>';
        }
        if (isset($approveTxt) && !empty($approveTxt)) {
            $labInfo .= '<b>Report Authorized by: </b>' . $approveTxt;
        }
        $labInfo .= '</p>';
        $labInfo .= '<hr><br>';
        // PT Co-ordinator header details end

        //Comment Details
        $labInfo .= '<table cellpadding="3" style="font-size:11px;">';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Participant Code</strong><br>' . $result['unique_identifier'] . '</td>';
        $labInfo .= '	<td><strong>Performing Participant</strong><br>' . $result['first_name'] . " " . $result['last_name'] . '</td>';
        $labInfo .= '	<td><strong>PT Panel Name and Date</strong><br>' . $result['distribution_code'] . '(' . $result['shipment_date'] . ')</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Shipment Date</strong><br>' . $result['shipment_date'] . '</td>';
        $labInfo .= '	<td><strong>Shipment Code</strong><br>' . $result['shipment_code'] . '</td>';
        $labInfo .= '	<td><strong>Shipment Type</strong><br>' . $result['scheme_name'] . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Panel Receipt Date</strong><br>' . $shipmentReceiptDate . '</td>';
        $labInfo .= '	<td><strong>Rehydration Date</strong><br>' . $sampleRehydrationDate . '</td>';

        $labInfo .= '	<td><strong>Result Due Date</strong><br>' . $result['lastdate_response'] . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Response Date</strong><br>' . $responseDate . '</td>';
        $labInfo .= '	<td><strong>Shipment Test Date</strong><br>' . $shipmentTestDate . '</td>';
        $labInfo .= '	<td><strong>Specimen Volume</strong><br>' . $result['specimen_volume'] . '</td>';
        $labInfo .= '	<td>';

        $labInfo .= ' </td>';
        $labInfo .= '</tr>';
        $labInfo .= '<tr>';
        $labInfo .= '	<td>';
        $labInfo .= '	<strong>Supervisor Name</strong><br>' . ($result['participant_supervisor']);
        $labInfo .= ' </td>';
        $labInfo .= '	<td>';
        if (isset($haveCustom) && $haveCustom == 'yes') {
            $labInfo .= '	<strong>' . $customField1 . '</strong> <br>' . $result['custom_field_1'];
        }
        $labInfo .= ' </td>';
        $labInfo .= '	<td>';
        if (isset($haveCustom) && $haveCustom == 'yes') {
            $labInfo .= '	<strong>' . $customField2 . '</strong> <br>' . $result['custom_field_2'];
        }
        $labInfo .= ' </td>';
        $labInfo .= '</tr>';

        $labInfo .= '</table>';
        //shipment_test_date
        $pdf->writeHTML($labInfo, true, false, true, false, '');


        if (sizeof($result['responseResult']) > 0) {

            $labRes = '<span style="font-weight: bold;font-size:12px;">Your Proficiency Test results : <br/></span><table border="1" style="font-size:12px;">';
            $labRes .= '<tr style="background-color:#dbe4ee;">
                            <td></td>';
            $labRes .= '<th style="text-align:center;font-weight:bold;">Test</th>';
            $labRes .= '<th colspan="5" style="border:none;"></th>
                        </tr>';
            $labRes .= '<tr>
                            <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Test Platform</td>
                            <td>' . $result['responseResult'][0]['testPlatform1'] . '</td>';
            $labRes .= '<td colspan="5"></td>
                                            </tr>';
            $labRes .= '<tr>
                                                <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Lot No.</td>
                                                <td>' . $result['responseResult'][0]['lot_no_1'] . '</td>';

            $labRes .= '<td colspan="5"></td>
                        </tr>';
            $labRes .= '<tr>
                            <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Expiry Date</td>
                            <td>' . Pt_Commons_General::humanReadableDateFormat($result['responseResult'][0]['exp_date_1']) . '</td>';

            $labRes .= '<td colspan="5"></td>
                        </tr>';
            $labRes .= '<tr style="background-color:#dbe4ee;">
                            <th style="text-align:center;font-weight:bold;width:14.66%;">Specimen Panel ID </th>';
            $labRes .= '<th style="text-align:center;font-weight:bold;width:10.66%;">Result</th>';
            $labRes .= '<th style="text-align:center;font-weight:bold;width:16.66%;">Expected Final Interpretation</th>
                            <th style="text-align:center;font-weight:bold;width:14.66%;">Your Final Interpretation</th>
                            <th style="text-align:center;font-weight:bold;width:12.66%;" colspan="2">Score</th>
                            <th style="text-align:center;font-weight:bold;width:30.66%;">Gene Types</th>
                        </tr>';

            $nonMandatorySamples = [];
            $controlSamples = [];
            $correctSamples = [];
            $totalProperSamples = 0;
            $correctSamplesCount = 0;
            $wrongSamples = [];
            $otherSamples = [];
            $allSamples = [];

            foreach ($result['responseResult'] as $response) {
                $allSamples[] = $response['sample_label'];
                if ($response['control'] == 1) {
                    $controlSamples[] = $response['sample_label'];
                }

                if ($response['mandatory'] == 0) {
                    $nonMandatorySamples[] = $response['sample_label'];
                } elseif ($response['calculated_score'] == 'Pass') {
                    $correctSamples[] = $response['sample_label'];
                } elseif ($response['calculated_score'] == 'Fail') {
                    $wrongSamples[] = $response['sample_label'];
                } else {
                    $otherSamples[] = $response['sample_label'];
                }
            }

            $correctSamplesCount = count($correctSamples);
            $totalProperSamples = $correctSamplesCount + count($wrongSamples);
            $maxDocumentationPoints = (isset($config->evaluation->covid19->documentationScore) && $config->evaluation->covid19->documentationScore > 0) ? ($config->evaluation->covid19->documentationScore) : 0;
            $maximumResponseScore = 100 - $maxDocumentationPoints;
            $scorePerCorrectSample = round($maximumResponseScore / (count($allSamples) - count($nonMandatorySamples) - count($controlSamples)), 2);

            foreach ($result['responseResult'] as $response) {

                // echo (var_export($geneDetails, true));
                // echo (var_export($geneDetails[$response['sample_id']], true));

                if ($response['calculated_score'] == 'Pass') {
                    $img = UPLOAD_PATH . '/../images/check.jpg';

                    $score = ($response['control'] == 0) ? $scorePerCorrectSample : "N.A.";
                } elseif ($response['calculated_score'] == 'Fail') {
                    $img = UPLOAD_PATH . '/../images/cross.jpg';
                    $score = ($response['control'] == 0) ? 0 : "N.A.";
                } else {
                    $img = UPLOAD_PATH . '/../images/minus.jpg';
                    $score = "N.A.";
                }
                $labRes .= '<tr>
							<td style="text-align:center;">' . $response['sample_label'] . '</td>
							<td>' . (isset($response['test_result_1']) && $response['test_result_1'] != "" ? $covid19Results[$response['test_result_1']] : "") . '</td>';
                $labRes .= '<td>' . ucfirst(strtolower($response['referenceResult'])) . '</td>
                            <td>' . ucfirst(strtolower($response['labResult'])) . '</td>
                            <td style="text-align:center;"><img style="width:10px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $score . '</td>
							<td style="text-align:center;">' . (!empty($geneDetails[$response['sample_id']]) ? implode(", ", $geneDetails[$response['sample_id']]) : '') . '</td>
						  </tr>';
            }
            $labRes .= '</table>';
            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($labRes, true, false, true, false, '');

            if (!empty($nonMandatorySamples)) {

                $nmsTable = "The following samples have been excluded from this evaluation : " . implode(", ", $nonMandatorySamples);
                $nmsTable .= "<br/>";
                $pdf->writeHTML($nmsTable, true, false, true, false, '');
            }

            if (isset($result['responseResult'][0]['failure_reason']) && $result['responseResult'][0]['failure_reason'] != "" && $result['responseResult'][0]['failure_reason'] != "[]" && $result['responseResult'][0]['failure_reason'] != null) {
                $failRes = '<span style="font-weight:bold;font-size:12px;">Suggested Corrective actions for your response :</span> <br/>';
                $failRes .= '<table border="1" style="font-size:11px;">';
                $failRes .= '<tr style="background-color:#dbe4ee;"><td style="text-align:center;font-weight:bold;">Failure Reasons (or) Warnings</td><td style="text-align:center;font-weight:bold;">Corrective Actions (if any)</td></tr>';
                $warnings = json_decode($result['responseResult'][0]['failure_reason'], true);
                foreach ($warnings as $warning) {
                    $failRes .= '<tr>';
                    $failRes .= '<td> ' . (isset($warning['warning']) ? $warning['warning'] : "") . ' </td>';
                    $failRes .= '<td> ' . (isset($warning['correctiveAction']) ? $warning['correctiveAction'] : "") . ' </td>';
                    $failRes .= '</tr>';
                }
                $failRes .= '</table>';
                $pdf->writeHTML($failRes, true, false, true, false, '');
            }
        }

        $totalScore = $result['shipment_score'] + $result['documentation_score'];
        if ($result['is_excluded'] == 'yes') {
            $wishes = '<p>Your response was not considered for evaluation</p>';
            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($wishes, true, false, true, false, '');
        } elseif ($schemeType == 'covid19' && $result['is_excluded'] != 'yes') {

            if ($totalScore >= $passPercentage) {
                $wishes = '<p style="font-size:12px;">Congratulations! You have received a satisfactory score of ' . round($totalScore, 2) . '%.</p>';
            } else {
                $wishes = '<p style="font-size:12px;">You have received a score of ' . round($totalScore, 2) . '%.</p>';
            }

            $pdf->SetLeftMargin(15);

            $pdf->writeHTML($wishes, true, false, true, false, '');
        }
        // Zend_Debug::dump("came");die;
        if (trim($result['shipment_comment']) != "" || trim($result['evaluationComments']) != "" || trim($result['optional_eval_comment']) != "") {
            $comment = '<br><br><table border="1" style="width:100%;font-size:12px;" cellpadding="3">';

            if (trim($result['evaluationComments']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
                $comment .= '<td style="width:70%;">' . $result['evaluationComments'] . '</td>';
                $comment .= '</tr>';
            }

            if (trim($result['optional_eval_comment']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
                $comment .= '<td style="width:70%;">' . $result['optional_eval_comment'] . '</td>';
                $comment .= '</tr>';
            }

            if (trim($result['shipment_comment']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;" colspan="2">' . $result['shipment_comment'] . '</td>';
                $comment .= '</tr>';
            }

            $comment .= '</table>';
            $pdf->writeHTML($comment, true, false, true, false, '');
        }
        $eodReportText = "End of report";
        if ($evalRow['report_type'] == 'finalized') {
            $eodReportText = "End of final report";
        }
        $html = '<p style="font-size:12px;">Thank you for participating in the ' . ($result['scheme_name']) . ' Proficiency Testing Program.</p>';
        $html .= '<br><p style="font-size:11px;text-align:center;font-weight:bold;"><u>End of ' . $eodReportText . ' Report</u>.</p>';
        $html .= '<p style="font-size:11px;font-weight:bold;"><i>This is the confidential report that summarizes your performance.</i></p>';
        if (trim($result['shipment_comment']) != "") {
            $html .= '<p style="font-size:11px;"><b>Scheme Manager`s Comments:</b> ' . $result['shipment_comment'] . '</p>';
        }
        $html .= '<p style="font-size:11px;font-weight:bold;text-align:center;"><i>NPH PT all rights reserved.</i></p>';
        $html .= '<p style="font-size:11px;font-weight:bold;">Report Print Date: ' . $commonService->humanReadableDateFormat(date('d-m-Y')) . '</p>';
        $pdf->writeHTML($html, true, false, true, false, '');

        if (ob_get_contents()) {
            ob_end_clean();
        }

        //Close and output PDF document
        if (isset($result['last_name']) && trim($result['last_name']) != "") {
            $result['last_name'] = "_" . $result['last_name'];
        }

        $nameParts = [];
        $keys = ['shipment_code', 'unique_identifier', 'region', 'state', 'district', 'city'];

        foreach ($keys as $key) {
            if (!empty($result[$key]) && strtoupper($result[$key]) != 'NULL') {
                $nameParts[] = ($key == 'shipment_code') ? $result[$key] : strtoupper($result[$key]);
            }
        }

        $fileName = implode("-", $nameParts) . "-" . $result['map_id'];
        $fileName = $general->makeFileNameFriendly($fileName) . ".pdf";
        $filePath = $reportsPath . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
        $created = $pdf->Output($filePath, "F");
        if ($trainingInstance == "yes") {
            //Watermark section
            $pdf = new PDF_Rotate();
        }

        $loadpdf = Zend_Pdf::load($filePath);

        foreach ($loadpdf->pages as $page) {
            $pdfExtract = $extractor->clonePage($page);
            //$pdfExtract->setFont($font, 8) ->drawText('Page '.$j.' / '.$totalPages, 280, 50);
            $pdfNew->pages[] = $pdfExtract;
        }
        $shipmentCode = $result['shipment_code'];
        $j++;
    }

    //============================================================+
    // END OF FILE
    //============================================================+
}
