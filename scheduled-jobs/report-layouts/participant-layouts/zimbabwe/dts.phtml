<?php
// This file is imported in generate-shipment-reports.php
require_once('tcpdf/tcpdf.php');
require_once(CRON_PATH . DIRECTORY_SEPARATOR . 'Common.php');
$general = new Common();
$schemeType = $resultArray['shipment'][0]['scheme_type'];
// Zend_Debug::dump($resultArray);die;
//var_dump($resultArray['shipment'][0]['responseResult'][0]['testkit1']);die;
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode = '';

$dtsResults = array();

$possibleDtsResults = $schemeService->getPossibleResults('dts');
foreach ($possibleDtsResults as $pr) {
    $dtsResults[$pr['id']] = ucfirst(strtolower($pr['response']));
}


if (sizeof($resultArray['shipment']) > 0) {
    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports') && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports')) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports');
    }
    $totalPages = count($resultArray['shipment']);
    $j = 1;
    //$resultArray['dmResult'];

    foreach ($resultArray['shipment'] as $result) {

        if ( /*(isset($result['responseResult'][0]['is_excluded']) && $result['responseResult'][0]['is_excluded'] == 'yes') || */
            (isset($result['responseResult'][0]['is_pt_test_not_performed']) && $result['responseResult'][0]['is_pt_test_not_performed'] == 'yes')
        ) {
            continue;
        }

        //Zend_Debug::dump($result['responseResult'][0]);die;

        if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'])) {
            mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']);
        }
        //error_log($i);
        // Extend the TCPDF class to create custom Header and Footer

        // create new PDF document
        $pdf = new IndividualPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

        $pdf->setSchemeName($header, $result['scheme_name'], $logo, $logoRight, $resultStatus, $schemeType, $layout, $evalRow['date_finalised'], $config, $trainingInstanceText, "", $instituteAddressPosition);
        // set document information
        //$pdf->SetCreator(PDF_CREATOR);
        //$pdf->SetAuthor('ePT');
        //$pdf->SetTitle('DEPARTMENT OF HEALTH AND HUMAN SERVICES');
        //
        //

        // set default header data
        $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

        // set header and footer fonts
        $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // set default monospaced font
        $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // set margins

        $pdf->SetMargins(PDF_MARGIN_LEFT, 50, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

        // set auto page breaks
        $pdf->SetAutoPageBreak(true, PDF_MARGIN_BOTTOM);

        // set image scale factor
        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // set some language-dependent strings (optional)
        if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
            require_once dirname(__FILE__) . '/lang/eng.php';
            $pdf->setLanguageArray($l);
        }

        // ---------------------------------------------------------

        // set font
        $pdf->SetFont('helvetica', '', 11);

        // add a page
        $pdf->AddPage();

        // set some text to print
        //$txt = <<<EOD
        //International Laboratory Branch
        //
        //Custom page header and footer are defined by extending the TCPDF class and overriding the Header() and Footer() methods.
        //EOD;
        //
        //// print a block of text using Write()
        //$pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);

        // ---------------------------------------------------------

        if (trim($result['shipment_date']) != "") {
            $result['shipment_date'] = $general->humanDateFormat($result['shipment_date']);
        }
        if (trim($result['lastdate_response']) != "") {
            $result['lastdate_response'] = $general->humanDateFormat($result['lastdate_response']);
        }

        $config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
        $responseDate = "";
        $shipmentTestDate = "";
        $shipmentScore = 0;
        $documentationScore = 0;
        $score = 0;

        $testThreeOptionalDisplay = "";
        if (isset($config->evaluation->dts->dtsOptionalTest3) && $config->evaluation->dts->dtsOptionalTest3 == 'yes') {
            $testThreeOptionalDisplay = "display:none;";
        }
        /* for Shipment attributes functionality start */
        $shipmentAttributes = json_decode($result['shipment_attributes'], true);
        $shipmentAttributesScreeningTestDisplay = "";
        if (isset($shipmentAttributes["screeningTest"]) && $shipmentAttributes["screeningTest"] == 'yes') {
            $shipmentAttributesScreeningTestDisplay = "display:none;";
            $testThreeOptionalDisplay = "display:none;";
        }
        $shipmentAttributesSampleTypeDisplay = "";
        if (isset($shipmentAttributes["sampleType"]) && ($shipmentAttributes["sampleType"] == 'serum' || $shipmentAttributes["sampleType"] == 'plasma')) {
            $shipmentAttributesSampleTypeDisplay = "display:none;";
        }
        /* for Shipment attributes functionality end */

        if (isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate']) != "") {
            $splitDate = explode(" ", $result['responseResult'][0]['responseDate']);
            $responseDate = $general->humanDateFormat($splitDate[0]);
        }
        $attributes = '';
        if (isset($result['attributes'])) {
            $attributes = json_decode($result['attributes'], true);
        }

        $sampleRehydrationDate = "";
        if (isset($attributes['sample_rehydration_date']) && trim($attributes['sample_rehydration_date']) != "") {
            $sampleRehydrationDate = $general->humanDateFormat($attributes['sample_rehydration_date']);
        }
        $shipmentReceiptDate = "";
        if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
            $shipmentReceiptDate = $general->humanDateFormat($result['responseResult'][0]['shipment_receipt_date']);
        }

        if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
            $shipmentTestDate = $general->humanDateFormat($result['responseResult'][0]['shipment_test_date']);
        }

        //if($result['result_name']=='Fail'){
        //    $wishes="";
        //    $splStr=explode("###",$result['failure_reason']);
        //    $k=sizeof($splStr);
        //    for($c=0;$c<$k;$c++){
        //        $wishes.='<p> '.$splStr[$c].'</p><br/>';
        //    }
        //    //$wishes = "<ul><li>" .str_replace("###","</li><li>",$result['failure_reason']) . "</li></ul>";
        //
        //}

        //Comment Details


        $labInfo = '<table cellpadding="3" style="font-size:11px;">';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Performing Participant</strong><br>' . $result['first_name'] . " " . $result['last_name'] . '</td>';
        $labInfo .= '	<td><strong>Participant Code</strong><br>' . $result['unique_identifier'] . '</td>';
        $labInfo .= '	<td><strong>Participant District</strong><br>' . $result['city'] . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Participant Institute</strong><br>' . $result['institute_name'] . '</td>';
        $labInfo .= '	<td><strong>Testing Point</strong><br>'.$result['site_type'].'</td>';
        $labInfo .= '	<td><strong>Scheme Name</strong><br>'.$result['scheme_name'].'</td>';
        $labInfo .= '</tr>';
        
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Scheme Round + Year</strong><br>' . $result['shipment_code'] . '</td>';
        $labInfo .= '	<td><strong>Shipment Date</strong><br>' . $result['shipment_date'] . '</td>';
        $labInfo .= '	<td><strong>Result Due Date</strong><br>' . $result['lastdate_response'] . '</td>';
        $labInfo .= '</tr>';
        
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Panel Receipt Date</strong><br>' . $shipmentReceiptDate . '</td>';
        $labInfo .= '	<td style="' . $shipmentAttributesSampleTypeDisplay . '"><strong>Rehydration Date</strong><br>' . $sampleRehydrationDate . '</td>';
        $labInfo .= '	<td><strong>Shipment Test Date</strong><br>' . $shipmentTestDate . '</td>';
        $labInfo .= '</tr>';
        
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Response Date</strong><br>' . $responseDate . '</td>';
        $labInfo .= '	<td><strong>Supervisor Name</strong><br>' . ($result['participant_supervisor']) . '</td>';
        $labInfo .= '	<td><strong>Report Issue Date</strong><br>'.date('d-m-Y H:i:s').'</td>';
        $labInfo .= '</tr>';
        
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Scheme Coordinator</strong><br>'.$result['pt_co_ordinator_name'].'</td>';
        $labInfo .= '	<td><strong>Report Authorised By</strong><br>'.$evalRow['saname'].'</td>';
        $labInfo .= '	<td><strong>PT Panel Name and Date</strong><br>' . $result['distribution_code'] . ' (' . $result['shipment_date'] . ')</td>';
        $labInfo .= '</tr>';
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Shipment Code</strong><br>' . $result['shipment_code'] . '</td>';
        $labInfo .= '	<td>';
        if (isset($haveCustom) && $haveCustom == 'yes' && !empty($customField1)) {
            $labInfo .= '	<strong>' . $customField1 . '</strong> <br>' . (!empty($result['custom_field_1']) ? $result['custom_field_1'] : '');
        }
        $labInfo .= '</td>';
        $labInfo .= '<td>';
        if (isset($haveCustom) && $haveCustom == 'yes' && !empty($customField2)) {
            $labInfo .= '<strong>' . $customField2 . '</strong> <br>' . (!empty($result['custom_field_2']) ? $result['custom_field_2'] : '');
        }
        $labInfo .= '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '</table>';
        //shipment_test_date
        $pdf->writeHTML($labInfo, true, false, true, false, '');


        if (sizeof($result['responseResult']) > 0) {

            $labRes = '<span style="font-weight: bold;font-size:12px;">Your HIV Proficiency results : <br/></span><table border="1" style="font-size:12px;">';
            $labRes .= '<tr style="background-color:#dbe4ee;">
                                <td></td>
                                <th style="text-align:center;font-weight:bold;">Test-1</th>';
            if ($shipmentAttributesScreeningTestDisplay == "") {
                $labRes .= '<th style="text-align:center;font-weight:bold;' . $shipmentAttributesScreeningTestDisplay . '">Test-2</th>';
            }
            if ($testThreeOptionalDisplay == "") {
                $labRes .= '<th style="text-align:center;font-weight:bold;' . $testThreeOptionalDisplay . '">Test-3</th>';
            }
            $labRes .= '<th colspan="4" style="border:none;"></th>
                            </tr>';
            $labRes .= '<tr>
                                <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Kit Name</td>
                                <td>' . $result['responseResult'][0]['testkit1'] . '</td>';
            if ($shipmentAttributesScreeningTestDisplay == "") {
                $labRes .= '<td style="' . $shipmentAttributesScreeningTestDisplay . '">' . $result['responseResult'][0]['testkit2'] . '</td>';
            }
            if ($testThreeOptionalDisplay == "") {
                $labRes .= '<td style="' . $testThreeOptionalDisplay . '">' . $result['responseResult'][0]['testkit3'] . '</td>';
            }
            $labRes .= '<td colspan="4"></td>
                            </tr>';
            $labRes .= '<tr>
                                <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Lot No.</td>
                                <td>' . $result['responseResult'][0]['lot_no_1'] . '</td>';
            if ($shipmentAttributesScreeningTestDisplay == "") {
                $labRes .= '<td style="' . $shipmentAttributesScreeningTestDisplay . '">' . $result['responseResult'][0]['lot_no_2'] . '</td>';
            }
            if ($testThreeOptionalDisplay == "") {
                $labRes .= '<td style="' . $testThreeOptionalDisplay . '">' . $result['responseResult'][0]['lot_no_3'] . '</td>';
            }
            $labRes .= '<td colspan="4"></td>
                            </tr>';
            $labRes .= '<tr>
                                <td style="text-align:center;font-weight:bold;background-color:#dbe4ee;">Expiry Date</td>
                                <td>' . $general->humanDateFormat($result['responseResult'][0]['exp_date_1']) . '</td>';
            if ($shipmentAttributesScreeningTestDisplay == "") {
                $labRes .= '<td style="' . $shipmentAttributesScreeningTestDisplay . '">' . $general->humanDateFormat($result['responseResult'][0]['exp_date_2']) . '</td>';
            }
            if ($testThreeOptionalDisplay == "") {
                $labRes .= '<td style="' . $testThreeOptionalDisplay . '">' . $general->humanDateFormat($result['responseResult'][0]['exp_date_3']) . '</td>';
            }
            $labRes .= '<td colspan="4"></td>
                            </tr>';
            $labRes .= '<tr style="background-color:#dbe4ee;">
                                <th style="text-align:center;font-weight:bold;">Specimen Panel ID </th>
                                <th style="text-align:center;font-weight:bold;">Result-1</th>';
            if ($shipmentAttributesScreeningTestDisplay == "") {
                $labRes .= '<th style="text-align:center;font-weight:bold;' . $shipmentAttributesScreeningTestDisplay . '">Result-2</th>';
            }
            if ($testThreeOptionalDisplay == "") {
                $labRes .= '<th style="text-align:center;font-weight:bold;' . $testThreeOptionalDisplay . '">Result-3</th>';
            }
            $labRes .= '<th style="text-align:center;font-weight:bold;">Expected Result</th>
							<th style="text-align:center;font-weight:bold;">Your Result</th>
                            <th style="text-align:center;font-weight:bold;" colspan="2">Score</th>
                            </tr>';

            $nonMandatorySamples = array();
            $controlSamples = array();
            $correctSamples = array();
            $totalProperSamples = 0;
            $correctSamplesCount = 0;
            $wrongSamples = array();
            $otherSamples = array();
            $allSamples = array();
            $mandatorySampleCount = 0;
            foreach ($result['responseResult'] as $response) {
                $allSamples[] = $response['sample_label'];
                if ($response['control'] == 1) {
                    $controlSamples[] = $response['sample_label'];
                }

                if ($response['mandatory'] == 0) {
                    $nonMandatorySamples[] = $response['sample_label'];
                } else {
                    $mandatorySampleCount++;
                    if ($response['calculated_score'] == 'Pass') {
                        $correctSamples[] = $response['sample_label'];
                    } else if ($response['calculated_score'] == 'Fail') {
                        $wrongSamples[] = $response['sample_label'];
                    } else {
                        $otherSamples[] = $response['sample_label'];
                    }
                }
            }

            $correctSamplesCount = count($correctSamples);
            $totalProperSamples = $correctSamplesCount + count($wrongSamples);
            $maxDocumentationPoints = (isset($config->evaluation->dts->documentationScore) && $config->evaluation->dts->documentationScore > 0) ? ($config->evaluation->dts->documentationScore) : 0;
            $maximumResponseScore = 100 - $maxDocumentationPoints;
            // $scorePerCorrectSample = round($maximumResponseScore / (count($allSamples) - count($nonMandatorySamples) - count($controlSamples)), 2);
            $scorePerCorrectSample = round($maximumResponseScore / $mandatorySampleCount, 2);
            $_score = 0;
            foreach ($result['responseResult'] as $response) {

                if ($response['calculated_score'] == 'Pass') {
                    $img = UPLOAD_PATH . '/../images/check.jpg';

                    $score = ($response['control'] == 0) ? $scorePerCorrectSample : "N.A.";
                } else if ($response['calculated_score'] == 'Fail') {
                    $img = UPLOAD_PATH . '/../images/cross.jpg';
                    $score = ($response['control'] == 0) ? 0 : "N.A.";
                } else {
                    $img = UPLOAD_PATH . '/../images/minus.jpg';
                    $score = "N.A.";
                }

                $_score += $score;
                $labRes .= '<tr>
							<td style="text-align:center;">' . $response['sample_label'] . '</td>
							<td>' . (isset($response['test_result_1']) && $response['test_result_1'] != "" ? $dtsResults[$response['test_result_1']] : "") . '</td>';
                if ($shipmentAttributesScreeningTestDisplay == "") {
                    $labRes .= '<td style="' . $shipmentAttributesScreeningTestDisplay . '">' . (isset($response['test_result_2']) && $response['test_result_2'] != "" ? $dtsResults[$response['test_result_2']] : "") . '</td>';
                }
                if ($testThreeOptionalDisplay == "") {
                    $labRes .= '<td style="' . $testThreeOptionalDisplay . '">' . (isset($response['test_result_3']) && $response['test_result_3'] != "" ? $dtsResults[$response['test_result_3']] : "") . '</td>';
                }
                $labRes .= '<td>' . ucfirst(strtolower($response['referenceResult'])) . '</td>
                <td>' . ucfirst(strtolower($response['labResult'])) . '</td>
                <td style="text-align:center;"><img style="width:10px;" src="' . $img . '" /></td>
                <td style="text-align:center;">' . $score . '</td>
                </tr>';
            }
            $labRes .= '</table><br>';
            $labRes .= '<span style="text-align:right;"><strong>Total :</strong> '.$_score.'</span>';

            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($labRes, true, false, true, false, '');

            if (count($nonMandatorySamples) > 0) {

                $nmsTable = "The following samples have been excluded from this evaluation : " . implode(", ", $nonMandatorySamples);
                $nmsTable .= "<br/>";
                $pdf->writeHTML($nmsTable, true, false, true, false, '');
            }

            //Let us now calculate documentation score
            $documentationScore = 0;
            $documentationScorePerItem = (isset($config->evaluation->dts->documentationScore) && $config->evaluation->dts->documentationScore > 0) ? ($config->evaluation->dts->documentationScore / 5) : 0;
            $attributes = json_decode($result['attributes'], true);

            $img = array();
            $imgPass = UPLOAD_PATH . '/../images/check.jpg';
            $imgFail = UPLOAD_PATH . '/../images/cross.jpg';

            $docRes = '<span style="font-weight:bold;font-size:12px;">Your documentation score :</span> <br/>
					<table border="1" style="font-size:12px;width:100%;">
						<tr style="background-color:#dbe4ee;">
							<td style="text-align:center;font-weight:bold;width:75%">Documentation Item</td>
							<td style="text-align:center;font-weight:bold;width:25%" colspan="2">Score</td>
						</tr>';
            $_scoreDoc = 0;
            if (strtolower($result['responseResult'][0]['supervisor_approval']) == 'yes' && trim($result['responseResult'][0]['participant_supervisor']) != "") {
                $scoreDoc = $documentationScorePerItem;
                $img = $imgPass;
            } else {
                $scoreDoc = 0;
                $img = $imgFail;
            }
            $_scoreDoc += $scoreDoc;
            $docRes .= '<tr>
							<td style="text-align:left;font-weight:bold;">Supervisor Approval</td>
							<td style="text-align:center;"><img style="width:9px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $scoreDoc . '</td>
					</tr>';

            if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
                $scoreDoc = $documentationScorePerItem;
                $img = $imgPass;
            } else {
                $scoreDoc = 0;
                $img = $imgFail;
            }
            $_scoreDoc += $scoreDoc;
            $docRes .= '<tr>
							<td style="text-align:left;font-weight:bold;">Panel/Shipment Receipt Date Specified</td>
							<td style="text-align:center;"><img style="width:9px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $scoreDoc . '</td>
					</tr>';

            if (isset($attributes['sample_rehydration_date']) && trim($attributes['sample_rehydration_date']) != "" && $shipmentAttributesSampleTypeDisplay == "") {
                $scoreDoc = $documentationScorePerItem;
                $img = $imgPass;
            } else {
                $scoreDoc = 0;
                $img = $imgFail;
            }
            $_scoreDoc += $scoreDoc;
            $docRes .= '<tr style="' . $shipmentAttributesSampleTypeDisplay . '">
							<td style="text-align:left;font-weight:bold;">Reporting of the Sample Rehydration Date</td>
							<td style="text-align:center;"><img style="width:9px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $scoreDoc . '</td>
					</tr>';

            if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
                $scoreDoc = $documentationScorePerItem;
                $img = $imgPass;
            } else {
                $scoreDoc = 0;
                $img = $imgFail;
            }
            $_scoreDoc += $scoreDoc;
            $docRes .= '<tr>
							<td style="text-align:left;font-weight:bold;">Reporting of the Shipment Test Date</td>
							<td style="text-align:center;"><img style="width:9px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $scoreDoc . '</td>
					</tr>';

            $config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
            $sampleRehydrationDate = new DateTime($attributes['sample_rehydration_date']);
            $testedOnDate = new DateTime($result['responseResult'][0]['shipment_test_date']);
            $interval = $sampleRehydrationDate->diff($testedOnDate);

            // Testing should be done within 24*($config->evaluation->dts->sampleRehydrateDays) hours of rehydration.
            $sampleRehydrateDays = $config->evaluation->dts->sampleRehydrateDays;
            $rehydrateHours = $sampleRehydrateDays * 24;

            if ($interval->days < $sampleRehydrateDays || $interval->days > ($sampleRehydrateDays + 1)) {
                $scoreDoc = 0;
                $img = $imgFail;
            } else {
                $scoreDoc = $documentationScorePerItem;
                $img = $imgPass;
            }
            $_scoreDoc += $scoreDoc;
            $docRes .= '<tr style="' . $shipmentAttributesSampleTypeDisplay . '">
							<td style="text-align:left;font-weight:bold;">Testing to be done within ' . $rehydrateHours . ' hours of rehydration.</td>
							<td style="text-align:center;"><img style="width:11px;" src="' . $img . '" /></td>
							<td style="text-align:center;">' . $scoreDoc . '</td>
					</tr>';

            $docRes .= '</table><br>';
            $docRes .= '<span style="text-align:right;"><strong>Total :</strong> '.$_scoreDoc.'</span><br>';
            $docRes .= '<span style="text-align:right;"><strong>Scheme Total :</strong> '.($_scoreDoc + $_score).'</span>';
            $pdf->writeHTML($docRes, true, false, true, false, '');

            if (isset($result['responseResult'][0]['failure_reason']) && $result['responseResult'][0]['failure_reason'] != "" && $result['responseResult'][0]['failure_reason'] != "[]" && $result['responseResult'][0]['failure_reason'] != null) {
                $failRes = '<span style="font-weight:bold;font-size:12px;">Suggested Corrective actions for your response :</span> <br/>';
                $failRes .= '<table border="1" style="font-size:11px;">';
                $failRes .= '<tr style="background-color:#dbe4ee;"><td style="text-align:center;font-weight:bold;">Failure Reasons (or) Warnings</td><td style="text-align:center;font-weight:bold;">Corrective Actions (if any)</td></tr>';
                $warnings = json_decode($result['responseResult'][0]['failure_reason'], true);
                foreach ($warnings as $warning) {
                    $failRes .= '<tr>';
                    $failRes .= '<td> ' . (isset($warning['warning']) ? $warning['warning'] : "") . ' </td>';
                    $failRes .= '<td> ' . (isset($warning['correctiveAction']) ? $warning['correctiveAction'] : "") . ' </td>';
                    $failRes .= '</tr>';
                }
                $failRes .= '</table>';
                $pdf->writeHTML($failRes, true, false, true, false, '');
            }
        }
        $totalScore = $result['shipment_score'] + $result['documentation_score'];
        if ($result['is_excluded'] == 'yes') {
            $wishes = '<p>Your response was not considered for evaluation</p>';
            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($wishes, true, false, true, false, '');
        } else if ($schemeType == 'dts' && $result['is_excluded'] != 'yes') {
            $wishes = '<p style="font-size:12px;">Overall final result remarks: ';
            if ($totalScore >= $passPercentage) {
                $wishes .= 'Satisfactory';
            } else {
                $wishes .= 'Unsatisfactory';
            }
            $wishes .= "</p>";

            $pdf->SetLeftMargin(15);

            $pdf->writeHTML($wishes, true, false, true, false, '');
        }

        //if(trim($result['distribution_date'])!=""){
        //    $result['distribution_date']=$general->humanDateFormat($result['distribution_date']);
        //}
        if (trim($result['shipment_comment']) != "" || trim($result['evaluationComments']) != "" || trim($result['optional_eval_comment']) != "") {
            $comment = '<br><br><table border="1" style="width:100%;font-size:12px;" cellpadding="3">';

            if (trim($result['evaluationComments']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
                $comment .= '<td style="width:70%;">' . $result['evaluationComments'] . '</td>';
                $comment .= '</tr>';
            }

            if (!empty(trim($result['optional_eval_comment']))) {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
                $comment .= '<td style="width:70%;">' . $result['optional_eval_comment'] . '</td>';
                $comment .= '</tr>';
            }

            if (trim($result['shipment_comment']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;" colspan="2">' . $result['shipment_comment'] . '</td>';
                $comment .= '</tr>';
            }

            $comment .= '</table>';
            //$pdf->SetTopMargin(13);
            $pdf->writeHTML($comment, true, false, true, false, '');
        }

        $html = '<p style="font-size:12px;">You have received a score of ' . round($totalScore, 2) . '%.</p>';
        $html .= '<p style="font-size:12px;">Thank you for participating in the ' . ($result['scheme_name']) . ' Proficiency Testing Program.</p>';


        $pdf->writeHTML($html, true, false, true, false, '');

        if (ob_get_contents()) {
            ob_end_clean();
        }

        //Close and output PDF document
        if (isset($result['last_name']) && trim($result['last_name']) != "") {
            $result['last_name'] = "_" . $result['last_name'];
        }

        //    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR .'reports'. DIRECTORY_SEPARATOR.$result['shipment_code'])) {
        //        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']);
        //    }

        $nameParts = array();
        if (!empty($result['shipment_code'])) {
            $nameParts[] = $result['shipment_code'];
        }
        if (!empty($result['unique_identifier']) && $result['unique_identifier'] != 'NULL') {
            $nameParts[] = ucfirst($result['unique_identifier']);
        }
        if (!empty($result['state']) && $result['state'] != 'NULL') {
            $nameParts[] = ucfirst($result['state']);
        }
        if (!empty($result['region']) && $result['region'] != 'NULL') {
            $nameParts[] = ucfirst($result['region']);
        }
        if (!empty($result['city']) && $result['city'] != 'NULL') {
            $nameParts[] = ucfirst($result['city']);
        }

        $fileName = implode("-", $nameParts) . "-" . $result['map_id'] . ".pdf";
        $fileName = preg_replace('/[^A-Za-z0-9.]/', '-', $fileName);
        $fileName = str_replace(" ", "-", $fileName);
        $fileName = trim(preg_replace('/-+/', '-', $fileName), '-');
        $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
        $created = $pdf->Output($filePath, "F");

        //$pdf->Output($fileName, 'I');

        $loadpdf = Zend_Pdf::load($filePath);

        foreach ($loadpdf->pages as $page) {
            $pdfExtract = $extractor->clonePage($page);
            //$pdfExtract->setFont($font, 8) ->drawText('Page '.$j.' / '.$totalPages, 280, 50);
            $pdfNew->pages[] = $pdfExtract;
        }
        $shipmentCode = $result['shipment_code'];
        $j++;
    }

    // $mergePdf = $shipmentCode . "-" . $bulkfileNameVal . "-bulk-participant-report.pdf";
    // $mergeFilePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $mergePdf;
    // $pdfNew->save($mergeFilePath);

    // foreach ($resultArray['dmResult'] as $dmID => $dmRes) {
    //     $pdfNew->pages = array();
    //     $expRes = explode(",", $dmRes);
    //     $resCount = count($expRes);
    //     if ($resCount > 0) {
    //         foreach ($expRes as $res) {
    //             $expStrRes = explode("#", $res);
    //             $dmFileName = $dmID . ".pdf";
    //             $participantFileName = $expStrRes[1] . ".pdf";
    //             $participantFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $participantFileName);
    //             $participantFileName = str_replace(" ", "-", $participantFileName);
    //             $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $participantFileName;
    //             if (file_exists($filePath)) {
    //                 $loadpdf = Zend_Pdf::load($filePath);
    //                 foreach ($loadpdf->pages as $page) {
    //                     $pdfExtract = $extractor->clonePage($page);
    //                     $pdfNew->pages[] = $pdfExtract;
    //                 }
    //             }
    //         }
    //     }

    //     $dmFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $dmFileName);
    //     $dmFileName = str_replace(" ", "-", $dmFileName);

    //     $mergePdf = $shipmentCode . "-" . $dmFileName;
    //     $mergeFilePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $mergePdf;
    //     $pdfNew->save($mergeFilePath);
    // }
    //============================================================+
    // END OF FILE
    //============================================================+
}
