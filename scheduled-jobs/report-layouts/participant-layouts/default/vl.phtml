<?php

require_once 'tcpdf/tcpdf.php';
require_once(CRON_PATH . DIRECTORY_SEPARATOR . 'General.php');
$general = new General();
$schemeType = $resultArray['shipment'][0]['scheme_type'];
// Zend_Debug::dump($resultArray);die;
//var_dump($resultArray['shipment'][0]['responseResult'][0]['testkit1']);die;
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode = '';


if (sizeof($resultArray['shipment']) > 0) {
    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports') && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports')) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports');
    }
    $totalPages = count($resultArray['shipment']);
    $j = 1;
    //$resultArray['dmResult'];
    // Zend_Debug::dump($recencyAssay[1]);die;

    foreach ($resultArray['shipment'] as $result) {


        $shipmentAttributes = json_decode($result['shipment_attributes'], true);

        $methodOfEvaluation = isset($shipmentAttributes['methodOfEvaluation']) ? $shipmentAttributes['methodOfEvaluation'] : 'standard';


        if ( /*(isset($result['responseResult'][0]['is_excluded']) && $result['responseResult'][0]['is_excluded'] == 'yes') || */
            (isset($result['responseResult'][0]['is_pt_test_not_performed']) && $result['responseResult'][0]['is_pt_test_not_performed'] == 'yes')
        ) {
            continue;
        }

        //Zend_Debug::dump($result['responseResult'][0]);die;

        if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'])) {
            mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']);
        }
        //error_log($i);
        // Extend the TCPDF class to create custom Header and Footer

        // create new PDF document
        $pdf = new IndividualPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

        $pdf->setSchemeName($header, $result['scheme_name'], $logo, $logoRight, $resultStatus, $schemeType, $layout, $evalRow['date_finalised']);
        // set document information
        //$pdf->SetCreator(PDF_CREATOR);
        //$pdf->SetAuthor('ePT');
        //$pdf->SetTitle('DEPARTMENT OF HEALTH AND HUMAN SERVICES');
        //
        //

        // set default header data
        $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

        // set header and footer fonts
        $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // set default monospaced font
        $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // set margins

        $pdf->SetMargins(PDF_MARGIN_LEFT, 50, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

        // set auto page breaks
        $pdf->SetAutoPageBreak(true, PDF_MARGIN_BOTTOM);

        // set image scale factor
        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // set some language-dependent strings (optional)
        if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
            require_once dirname(__FILE__) . '/lang/eng.php';
            $pdf->setLanguageArray($l);
        }

        // ---------------------------------------------------------

        // set font
        $pdf->SetFont('helvetica', '', 11);

        // add a page
        $pdf->AddPage();

        // set some text to print
        //$txt = <<<EOD
        //International Laboratory Branch
        //
        //Custom page header and footer are defined by extending the TCPDF class and overriding the Header() and Footer() methods.
        //EOD;
        //
        //// print a block of text using Write()
        //$pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);

        // ---------------------------------------------------------

        if (trim($result['shipment_date']) != "") {
            $result['shipment_date'] = $general->humanDateFormat($result['shipment_date']);
        }
        if (trim($result['lastdate_response']) != "") {
            $result['lastdate_response'] = $general->humanDateFormat($result['lastdate_response']);
        }

        $config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
        $responseDate = "";
        $shipmentTestDate = "";
        $shipmentScore = 0;
        $documentationScore = 0;
        $score = 0;

        if (isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate']) != "") {
            $splitDate = explode(" ", $result['responseResult'][0]['responseDate']);
            $responseDate = $general->humanDateFormat($splitDate[0]);
        }
        $attributes = '';
        if (isset($result['attributes'])) {
            $attributes = json_decode($result['attributes'], true);
        }
        $shipmentReceiptDate = "";
        if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
            $shipmentReceiptDate = $general->humanDateFormat($result['responseResult'][0]['shipment_receipt_date']);
        }

        if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
            $shipmentTestDate = $general->humanDateFormat($result['responseResult'][0]['shipment_test_date']);
        }

        //if($result['result_name']=='Fail'){
        //    $wishes="";
        //    $splStr=explode("###",$result['failure_reason']);
        //    $k=sizeof($splStr);
        //    for($c=0;$c<$k;$c++){
        //        $wishes.='<p> '.$splStr[$c].'</p><br/>';
        //    }
        //    //$wishes = "<ul><li>" .str_replace("###","</li><li>",$result['failure_reason']) . "</li></ul>";
        //
        //}

        //Comment Details



        $labInfo = '<table cellpadding="2" style="font-size:12px;width:830px;">';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>PT Panel </strong> <br>' . $result['distribution_code'] . '(' . $result['shipment_date'] . ')</td>';
        $labInfo .= '	<td><strong>Date PT Panel Received</strong> <br>' . $shipmentReceiptDate . '</td>';

        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Participant ID</strong> <br>' . $result['unique_identifier'] . '</td>';
        $labInfo .= '	<td><strong>Date PT Panel Tested</strong> <br>' . $shipmentTestDate . '</td>';
        $labInfo .= '</tr>';
        if (isset($attributes['vl_assay']) && $attributes['vl_assay'] == 6) {
            $machine = $attributes['vl_assay'];
        } else{
            $machine = $result['responseResult'][0]['vl_assay'];
        }
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Platform/Assay Name</strong> <br>' . $machine . '</td>';
        $labInfo .= '	<td></td>';
        // $labInfo .= '	<td><strong>Results Submitted Date</strong> <br>' . date('d-M-Y',strtotime($result['responseResult']['shipment_test_report_date'])) . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '</table>';
        // Zend_Debug::dump($result['responseResult']);die;
        //shipment_test_date
        $pdf->writeHTML($labInfo, true, false, true, false, '');
        if($methodOfEvaluation != 'standard'){

            if (sizeof($result['responseResult']) > 0) {
                $labRes = "";
                //if($result['responseResult'][0]['no_of_participants'] > 6 && $attributes['vl_assay']!=6) {
                if ($result['responseResult'][0]['no_of_participants'] > 0) {
                    $labRes .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:11px;">
                                    <tr>
                                        <td style="background-color:white;" colspan="2"></td>
                                        <td style="background-color:#8ECF64;" colspan="3">All Participants Results <br/>Summary</td>
                                        <td style="background-color:#8ECF64;" colspan="2">Your Lab Performance</td>
                                    </tr>
                                    <tr>
                                        <td style="background-color:#8ECF64;"><br><br>Specimen ID </td>
                                        <td style="background-color:#8ECF64;">Your Results<br/>(log<sub>10</sub> copies/ml)</td>
                                        <td style="background-color:#8ECF64;"><br><br>Number of <br/>Participants</td>
                                        <td style="background-color:#8ECF64;">Assigned <br/>Value<br/>(log<sub>10</sub> copies/ml)</td>
                                        <td style="background-color:#8ECF64;"><br>Robust <br/>Standard <br/>Deviation</td>
                                        <td style="background-color:#8ECF64;"><br><br>z Score</td>
                                        <td style="background-color:#8ECF64;"><br><br>Your Grade</td>
                                    </tr>';
                    if ($result['is_excluded'] == 'yes') {
                        foreach ($result['responseResult'] as $response) {
                            $labRes .= '<tr>
                                            <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                            <td>' . $response['reported_viral_load'] . '</td>
                                            <td>' . $response['no_of_participants'] . '</td>
                                            <td>' . number_format(round($response['mean'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['sd'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['zscore'], 2), 2, '.', '') . '</td>
                                            <td>Not Evaluated</td>
                                        </tr>';
                        }
                    } else {
                        foreach ($result['responseResult'] as $response) {
                            $labRes .= '<tr>
                                            <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                            <td>' . ((isset($response['reported_viral_load']) && !empty($response['reported_viral_load']) ? $response['reported_viral_load'] : "")) . '</td>
                                            <td>' . $response['no_of_participants'] . '</td>
                                            <td>' . number_format(round($response['mean'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['sd'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['zscore'], 2), 2, '.', '') . '</td>
                                            <td>' . $response['grade'] . '</td>
                                        </tr>';
                        }
                    }
                    $labRes .= '</table>';
                } else {
    
                    $labRes .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:13px;">
                                    <tr>
                                        <td style="background-color:#8ECF64;">Specimen ID </td>
                                        <td style="background-color:#8ECF64;">Your Results<br/>(log<sub>10</sub> copies/ml)</td>
                                        <!-- <td style="background-color:#8ECF64;"># of Labs</td> -->
                                        <td style="background-color:#8ECF64;">Your Grade</td>
                                    </tr>';
    
                    foreach ($result['responseResult'] as $response) {
    
                        $labRes .= '<tr>
                                        <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                        <td>' . round($response['reported_viral_load'], 2) . '</td>
                                        <!-- <td>' . $response['no_of_participants'] . '</td> -->
                                        <td>Not Graded</td>
                                    </tr>';
                    }
    
                    $labRes .= '</table>';
                    $labRes .= '<h5>' . $result['responseResult'][0]['vl_assay'];
                    if (isset($attributes['vl_assay']) && $attributes['vl_assay'] == 6) {
                        $labRes .= " - " . $attributes['other_assay'];
                    }
                    $labRes .= ' platform was not analyzed or graded</h5>';
                }
    
                //if(isset($attributes['vl_assay']) && $attributes['vl_assay']==6){
                //    $labRes.='<h5>"Other Platforms were not analyzed or graded"</h5>';
                //}
    
                $pdf->SetLeftMargin(15);
                $pdf->writeHTML($labRes, true, false, true, false, '');
    
                $footerHead = '<h5>0.00 = Target Not Detected or less than lower limit of detection</h5><br/>';
                $pdf->writeHTML($footerHead, true, false, true, false, '');
    
                $zscorehtml = '<h5>Results Interpretation and Recommended Actions</h5><br/>';
                $zscorehtml .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:11px;">   ';
                    $zscorehtml .= '<tr>';
                        $zscorehtml .= '<th style="background-color:#8ECF64;"><strong>z Score</strong></th>';
                        $zscorehtml .= '<th style="background-color:#8ECF64;"><strong>Results Interpretation</strong></th>';
                        $zscorehtml .= '<th style="background-color:#8ECF64;"><strong>Recommended Action</strong></th>';
                    $zscorehtml .= '</tr>';
    
                    $zscorehtml .= '<tr>';
                        $zscorehtml .= '<td>z ≤ ±2.0</td>';
                        $zscorehtml .= '<td>Acceptable</td>';
                        $zscorehtml .= '<td>No action required</td>';
                    $zscorehtml .= '</tr>';
    
                    $zscorehtml .= '<tr>';
                        $zscorehtml .= '<td>± 2.0 > z < ± 3.0</td>';
                        $zscorehtml .= '<td>Warning</td>';
                        $zscorehtml .= '<td>No action required</td>';
                    $zscorehtml .= '</tr>';
                    
                    $zscorehtml .= '<tr>';
                        $zscorehtml .= '<td>z ≥ ± 3.0</td>';
                        $zscorehtml .= '<td>Unacceptable</td>';
                        $zscorehtml .= '<td>Perform corrective action</td>';
                    $zscorehtml .= '</tr>';
    
                $zscorehtml .= '</table>';
    
                $zscorehtml .= '<h5>Information with respect to compliance with standards ISO 13528:2015(E)Preparation of Proficiency Test items:</h5>';
                $zscorehtml .= '<br/><span style="text-align:justify;font-size:8;">The proficiency test items were prepared by the trained staff of CDC-ILB using inactivated cultured HIV-1, following institutional SOP. The PT samples were issued with instructions to report on detection using routine methods.  The PT samples were tested for homogeneity prior to shipment and met program requirements.</span>';
               
                $zscorehtml .= '<h5>Procedures used to establish the assigned value:</h5>';
                $zscorehtml .= '<br/><span style="text-align:justify;font-size:8;">The results of participating laboratories using the same VL platform were grouped together and analyzed for peer-comparison using the Normalized interquartile range (nIQR) method. Assigned value, Robust Standard Deviation, Standard Uncertainty of assigned value, z score and performance score were derived as per the Standard ISO13528: 2015(E). A VL platform with the most participants was used as a reference value to evaluate results for VL platforms with less than eighteen participants in this PT round.</span>';
                
                $zscorehtml .= '<h5>Subcontracting:</h5>';
                $zscorehtml .= '<br/><span style="text-align:justify;font-size:8;">Only the transport of PT items is subcontracted.</span>';
                $zscorehtml .= '<br/><span style="text-align:justify;font-size:8;">The identities of participants are kept confidential and known only to the staff involved in the implementation of the Proficiency Testing.  In order to ensure anonymity in this final report, each participant has been assigned a unique identification number.</span>';
                $pdf->writeHTML($zscorehtml, true, false, true, false, '');
            }
    
            if ($result['is_excluded'] == 'yes') {
                $wishes = '</br><p>Your response was not considered for evaluation</p>';
                $pdf->SetLeftMargin(15);
                $pdf->writeHTML($wishes, true, false, true, false, '');
            }
    
            //if(trim($result['distribution_date'])!=""){
            //    $result['distribution_date']=$general->humanDateFormat($result['distribution_date']);
            //}
            if (trim($result['shipment_comment']) != "" || trim($result['evaluationComments']) != "" || trim($result['optional_eval_comment']) != "") {
                $comment = '<br><br><table border="1" style="width:100%;font-size:12px;" cellpadding="3">';
    
                if (trim($result['evaluationComments']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
                    $comment .= '<td style="width:70%;">' . $result['evaluationComments'] . '</td>';
                    $comment .= '</tr>';
                }
    
                if (trim($result['optional_eval_comment']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
                    $comment .= '<td style="width:70%;">' . $result['optional_eval_comment'] . '</td>';
                    $comment .= '</tr>';
                }
    
                if (trim($result['shipment_comment']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;" colspan="2">' . $result['shipment_comment'] . '</td>';
                    $comment .= '</tr>';
                }
    
                $comment .= '</table>';
                //$pdf->SetTopMargin(13);
                $pdf->writeHTML($comment, true, false, true, false, '');
            }
    
            $html = '</br><p>Thank you for participating in the HIV Viral Load Proficiency Testing Program.</p>';
            $html .= '<br><small>Note: A VL platform with the most participants was used as a reference value to evaluate results for VL platforms with less than 6 participants on this PT round.</small>';
    
            /* $html .= '<br/><hr>';
            $html .= '<span style="text-align:center;"><small>Report approved by Shon Nguyen- PT Coordinator, VL and EID Team</small></span>';
            $html .= '<br/><span style="text-align:center;"><small>Date of approval: 4 Jan 2021</small></span>';
            $html .= '<br/><span style="text-align:center;"><small><i>This is a system generated report. No signature required</i></small></span>';
            $html .= '<br/><span style="text-align:center;"><small>– End of final report –</small></span>'; */
            $pdf->writeHTML($html, true, false, true, false, '');
        } else if($methodOfEvaluation == 'standard'){
            if (sizeof($result['responseResult']) > 0) {

                //Vl report
                //var_dump($attributes);die;
                $labRes = '<h5>Platform : ' . $result['responseResult'][0]['vl_assay'] . '</h5>';
                if (isset($attributes['vl_assay']) && $attributes['vl_assay'] == 6) {
                    $labRes = '<h5>Platform : ' . $attributes['other_assay'] . '</h5>';
                }
                //$labRes.='</h5>';
    
                //if($result['responseResult'][0]['no_of_participants'] > 6 && $attributes['vl_assay']!=6) {
                if ($result['responseResult'][0]['no_of_participants'] > 0) {
                    $labRes .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:11px;">
                                    <tr>
                                        <td style="background-color:#8ECF64;"><br><br>Specimen ID </td>
                                        <td style="background-color:#8ECF64;">Your Results<br/>(log<sub>10</sub> copies/ml)</td>
                                        <td style="background-color:#8ECF64;">Mean<br/>(log<sub>10</sub> copies/ml)</td>
                                        <td style="background-color:#8ECF64;"><br><br>S.D.</td>
                                        <td style="background-color:#8ECF64;"><br><br>No. of Labs</td>
                                        <td style="background-color:#8ECF64;">Lowest <br/> Acceptable Limit</td>
                                        <td style="background-color:#8ECF64;">Highest <br/> Acceptable Limit</td>
                                        <td style="background-color:#8ECF64;"><br><br>Your Grade</td>
                                    </tr>';
                    if ($result['is_excluded'] == 'yes') {
                        foreach ($result['responseResult'] as $response) {
                            $labRes .= '<tr>
                                            <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                            <td>' . $response['reported_viral_load'] . '</td>
                                            <td>' . number_format(round($response['mean'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['sd'], 2), 2, '.', '') . '</td>
                                            <td>' . $response['no_of_participants'] . '</td>
                                            <td>' . number_format(round($response['low'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['high'], 2), 2, '.', '') . '</td>
                                            <td>Not Evaluated</td>
                                        </tr>';
                        }
                    } else {
                        foreach ($result['responseResult'] as $response) {
                            $labRes .= '<tr>
                                            <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                            <td>' . ((isset($response['reported_viral_load']) && !empty($response['reported_viral_load']) ? $response['reported_viral_load'] : "")) . '</td>
                                            <td>' . number_format(round($response['mean'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['sd'], 2), 2, '.', '') . '</td>
                                            <td>' . $response['no_of_participants'] . '</td>
                                            <td>' . number_format(round($response['low'], 2), 2, '.', '') . '</td>
                                            <td>' . number_format(round($response['high'], 2), 2, '.', '') . '</td>
                                            <td>' . $response['grade'] . '</td>
                                        </tr>';
                        }
                    }
                    $labRes .= '</table>';
                } else {
    
                    $labRes .= '<table border="1" style="text-align:center;font-weight:bold;width:650px;font-size:13px;">
                                    <tr>
                                        <td style="background-color:#8ECF64;">Specimen ID </td>
                                        <td style="background-color:#8ECF64;">Your Results<br/>(log<sub>10</sub> copies/ml)</td>
                                        <!-- <td style="background-color:#8ECF64;"># of Labs</td> -->
                                        <td style="background-color:#8ECF64;">Your Grade</td>
                                    </tr>';
    
                    foreach ($result['responseResult'] as $response) {
    
                        $labRes .= '<tr>
                                        <td style="text-align:center;">' . $response['sample_label'] . '</td>
                                        <td>' . round($response['reported_viral_load'], 2) . '</td>
                                        <!-- <td>' . $response['no_of_participants'] . '</td> -->
                                        <td>Not Graded</td>
                                    </tr>';
                    }
    
                    $labRes .= '</table>';
                    $labRes .= '<h5>' . $result['responseResult'][0]['vl_assay'];
                    if (isset($attributes['vl_assay']) && $attributes['vl_assay'] == 6) {
                        $labRes .= " - " . $attributes['other_assay'];
                    }
                    $labRes .= ' platform was not analyzed or graded</h5>';
                }
    
                //if(isset($attributes['vl_assay']) && $attributes['vl_assay']==6){
                //    $labRes.='<h5>"Other Platforms were not analyzed or graded"</h5>';
                //}
    
                $pdf->SetLeftMargin(15);
                $pdf->writeHTML($labRes, true, false, true, false, '');
    
                $footerHead = '<h5>0.00 = Target Not Detected or less than lower limit of detection</h5><br/>';
                $pdf->writeHTML($footerHead, true, false, true, false, '');
            }
    
            if ($result['is_excluded'] == 'yes') {
                $wishes = '<p>Your response was not considered for evaluation</p>';
                $pdf->SetLeftMargin(15);
                $pdf->writeHTML($wishes, true, false, true, false, '');
            }
    
            //if(trim($result['distribution_date'])!=""){
            //    $result['distribution_date']=$general->humanDateFormat($result['distribution_date']);
            //}
            if (trim($result['shipment_comment']) != "" || trim($result['evaluationComments']) != "" || trim($result['optional_eval_comment']) != "") {
                $comment = '<br><br><table border="1" style="width:100%;font-size:12px;" cellpadding="3">';
    
                if (trim($result['evaluationComments']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
                    $comment .= '<td style="width:70%;">' . $result['evaluationComments'] . '</td>';
                    $comment .= '</tr>';
                }
    
                if (trim($result['optional_eval_comment']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
                    $comment .= '<td style="width:70%;">' . $result['optional_eval_comment'] . '</td>';
                    $comment .= '</tr>';
                }
    
                if (trim($result['shipment_comment']) != "") {
                    $comment .= '<tr>';
                    $comment .= '<td style="font-weight:bold;" colspan="2">' . $result['shipment_comment'] . '</td>';
                    $comment .= '</tr>';
                }
    
                $comment .= '</table>';
                //$pdf->SetTopMargin(13);
                $pdf->writeHTML($comment, true, false, true, false, '');
            }
    
            $html = '<p>Thank you for participating in the HIV Viral Load Proficiency Testing Program.</p>';
            $html .= '<br><small>Note: A VL platform with the most participants was used as a reference value to evaluate results for VL platforms with less than 6 participants on this PT round.</small>';
    
    
            $pdf->writeHTML($html, true, false, true, false, '');
        }

        if (ob_get_contents()) {
            ob_end_clean();
        }

        //Close and output PDF document
        if (isset($result['last_name']) && trim($result['last_name']) != "") {
            $result['last_name'] = "_" . $result['last_name'];
        }

        //    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR .'reports'. DIRECTORY_SEPARATOR.$result['shipment_code'])) {
        //        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']);
        //    }

        $fileName = $result['shipment_code'] . "-" . $result['map_id'] . ".pdf";
        $fileName = preg_replace('/[^A-Za-z0-9.]/', '-', $fileName);
        $fileName = str_replace(" ", "-", $fileName);
        $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
        $created = $pdf->Output($filePath, "F");

        //$pdf->Output($fileName, 'I');

        $loadpdf = Zend_Pdf::load($filePath);

        foreach ($loadpdf->pages as $page) {
            $pdfExtract = $extractor->clonePage($page);
            //$pdfExtract->setFont($font, 8) ->drawText('Page '.$j.' / '.$totalPages, 280, 50);
            $pdfNew->pages[] = $pdfExtract;
        }
        $shipmentCode = $result['shipment_code'];
        $j++;
    }

    $mergePdf = $shipmentCode . "-" . $bulkfileNameVal . "-bulk-participant-report.pdf";
    $mergeFilePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $mergePdf;
    $pdfNew->save($mergeFilePath);

    foreach ($resultArray['dmResult'] as $dmID => $dmRes) {
        $pdfNew->pages = array();
        $expRes = explode(",", $dmRes);
        $resCount = count($expRes);
        if ($resCount > 0) {
            foreach ($expRes as $res) {
                $expStrRes = explode("#", $res);
                $dmFileName = $dmID . ".pdf";
                $participantFileName = $expStrRes[1] . ".pdf";
                $participantFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $participantFileName);
                $participantFileName = str_replace(" ", "-", $participantFileName);
                $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $participantFileName;
                if (file_exists($filePath)) {
                    $loadpdf = Zend_Pdf::load($filePath);
                    foreach ($loadpdf->pages as $page) {
                        $pdfExtract = $extractor->clonePage($page);
                        $pdfNew->pages[] = $pdfExtract;
                    }
                }
            }
        }

        $dmFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $dmFileName);
        $dmFileName = str_replace(" ", "-", $dmFileName);

        $mergePdf = $shipmentCode . "-" . $dmFileName;
        $mergeFilePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $shipmentCode . DIRECTORY_SEPARATOR . $mergePdf;
        $pdfNew->save($mergeFilePath);
    }
    //============================================================+
    // END OF FILE
    //============================================================+
}
