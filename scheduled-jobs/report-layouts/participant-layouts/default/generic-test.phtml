<?php

////require_once('tcpdf/tcpdf.php')
require_once(CRON_PATH . DIRECTORY_SEPARATOR . 'Common.php');
$general = new Common();
$schemeType = $resultArray['shipment'][0]['scheme_type'];
// Zend_Debug::dump($resultArray);die;
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode = '';

$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
if (sizeof($resultArray['shipment']) > 0) {
    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports') && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports')) {
        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports');
    }
    $totalPages = count($resultArray['shipment']);
    $j = 1;
    //$resultArray['dmResult'];
    // Zend_Debug::dump($resultArray['shipment'][2]);die;

    foreach ($resultArray['shipment'] as $result) {
        $shipmentAttributes = json_decode($result['shipment_attributes'], true);

        $methodOfEvaluation = isset($shipmentAttributes['methodOfEvaluation']) ? $shipmentAttributes['methodOfEvaluation'] : 'standard';

        if ( /*(isset($result['responseResult'][0]['is_excluded']) && $result['responseResult'][0]['is_excluded'] == 'yes') || */
            (isset($result['responseResult'][0]['is_pt_test_not_performed']) && $result['responseResult'][0]['is_pt_test_not_performed'] == 'yes')
        ) {
            continue;
        }

        //Zend_Debug::dump($result['responseResult'][0]);die;

        if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'])) {
            mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code']);
        }
        //error_log($i);
        // Extend the TCPDF class to create custom Header and Footer

        // create new PDF document
        $pdf = new IndividualPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
        if ($methodOfEvaluation == 'iso17043') {
            $pdf->setSchemeName($header, $result['scheme_name'], $logo, $logoRight, $resultStatus, $schemeType, $layout, $evalRow['date_finalised'], $config, $trainingInstanceText, "", $instituteAddressPosition);
        } else {
            $pdf->setSchemeName($header, $result['scheme_name'], $logo, $logoRight, $resultStatus, $schemeType, $layout, $evalRow['date_finalised'], "", $trainingInstanceText, "", $instituteAddressPosition);
        }
        // set document information
        //$pdf->SetCreator(PDF_CREATOR);
        //$pdf->SetAuthor('ePT');
        //$pdf->SetTitle('DEPARTMENT OF HEALTH AND HUMAN SERVICES');
        //
        //

        // set default header data
        $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

        // set header and footer fonts
        $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // set default monospaced font
        $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // set margins

        $pdf->SetMargins(PDF_MARGIN_LEFT, 40, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
        $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

        // set auto page breaks
        $pdf->SetAutoPageBreak(true, PDF_MARGIN_BOTTOM);

        // set image scale factor
        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // set some language-dependent strings (optional)
        if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
            require_once dirname(__FILE__) . '/lang/eng.php';
            $pdf->setLanguageArray($l);
        }

        // ---------------------------------------------------------

        // set font
        $pdf->SetFont('freesans', '', 11);

        // add a page
        $pdf->AddPage();

        // set some text to print
        //$txt = <<<EOD
        //International Laboratory Branch
        //
        //Custom page header and footer are defined by extending the TCPDF class and overriding the Header() and Footer() methods.
        //EOD;
        //
        //// print a block of text using Write()
        //$pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);

        // ---------------------------------------------------------

        if (trim($result['shipment_date']) != "") {
            $result['shipment_date'] = $general->humanDateFormat($result['shipment_date']);
        }
        if (trim($result['lastdate_response']) != "") {
            $result['lastdate_response'] = $general->humanDateFormat($result['lastdate_response']);
        }

        $responseDate = "";
        $shipmentTestDate = "";
        $shipmentTestReportDate = "";
        $shipmentScore = 0;
        $documentationScore = 0;
        $score = 0;

        $testThreeOptionalDisplay = "";
        if (isset($config->evaluation->dts->dtsOptionalTest3) && $config->evaluation->dts->dtsOptionalTest3 == 'yes') {
            $testThreeOptionalDisplay = "display:none;";
        }
        /* for Shipment attributes functionality start */
        //$shipmentAttributes = json_decode($result['shipment_attributes'], true);


        /* for Shipment attributes functionality end */

        if (isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate']) != "") {
            $splitDate = explode(" ", $result['responseResult'][0]['responseDate']);
            $responseDate = $general->humanDateFormat($splitDate[0]);
        }
        $attributes = '';
        if (isset($result['attributes'])) {
            $attributes = json_decode($result['attributes'], true);
        }

        $shipmentReceiptDate = "";
        if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date']) != "") {
            $shipmentReceiptDate = $general->humanDateFormat($result['responseResult'][0]['shipment_receipt_date']);
        }

        if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
            $shipmentTestDate = $general->humanDateFormat($result['responseResult'][0]['shipment_test_date']);
        }

        if (isset($result['responseResult'][0]['responseDate']) && trim($result['responseResult'][0]['responseDate']) != "") {
            $shipmentTestReportDate = $general->humanDateFormat($result['responseResult'][0]['responseDate']);
        }

        //if($result['result_name']=='Fail'){
        //    $wishes="";
        //    $splStr=explode("###",$result['failure_reason']);
        //    $k=sizeof($splStr);
        //    for($c=0;$c<$k;$c++){
        //        $wishes.='<p> '.$splStr[$c].'</p><br/>';
        //    }
        //    //$wishes = "<ul><li>" .str_replace("###","</li><li>",$result['failure_reason']) . "</li></ul>";
        //
        //}

        //Comment Details


        // Samples without response need not be generated
        if (!empty($result['responseResult'])) {
            continue;
        }
        $labInfo = '<table cellpadding="3" style="width:830px;font-size:11px;">';
        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>PT Panel Name and Date</strong> <br>' . $result['distribution_code'] . ' (' . $result['shipment_date'] . ')</td>';
        $labInfo .= '	<td><strong>PT Panel Received</strong> <br>' . $shipmentReceiptDate . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>PT Panel Tested </strong> <br>' . $shipmentTestDate . '</td>';
        $labInfo .= '	<td><strong>Results Submitted Date</strong> <br>' . $responseDate . '</td>';
        $labInfo .= '</tr>';

        $labInfo .= '<tr>';
        $labInfo .= '	<td><strong>Lab ID</strong> <br>' . $result['unique_identifier'] . '</td>';
        $labInfo .= '</tr>';
        $labInfo .= '</table>';

        $pdf->writeHTML($labInfo, true, false, true, false, '');


        /* if (sizeof($result['responseResult']) > 0) {

            $n = count($result['responseResult']);
            $labRes = '<span style="font-weight: bold;font-size:13px;text-align:center;">Your laboratory test results : <br/></span>';
            $labRes .= '<table border="1" style="font-size:11px;" cellpadding="3">';
            $labRes .= '<tr style="background-color:#dbe4ee;">';
            $labRes .= '<td colspan="' . ($n + 2) . '" style="text-align:center;font-weight:bold;">Sample ID</td>';
            $labRes .= '</tr>';
            $labRes .= '<tr style="background-color:#dbe4ee;">';
            $labRes .= '<td></td>';
            //Sample codes
            foreach ($result['responseResult'] as $response) {
                $labRes .= '<td style="text-align:center;font-weight:bold;">' . $response['sample_label'] . '</td>';
            }
            $labRes .= '<td style="text-align:center;font-weight:bold;">Score(%)</td>';
            $labRes .= '</tr>';
            $labRes .= '<tr>';
            $labRes .= '<td>Expected Result</td>';
            foreach ($result['responseResult'] as $response) {
                $labRes .= '<td style="text-align:left;">' . $response['referenceResult'] . '</td>';
            }
            $labRes .= '<td rowspan="2" style="text-align:center;"><br><br>' . $result['shipment_score'] . '</td>';
            $labRes .= '</tr>';
            $labRes .= '<tr>';
            $labRes .= '<td>Your Results</td>';
            foreach ($result['responseResult'] as $response) {
                $labRes .= '<td style="text-align:left;">' . $response['reported_result'] . '</td>';
            }
            $labRes .= '</tr>';

            $labRes .= '</table>';

            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($labRes, true, false, true, false, '');
        } */

        if ($result['is_excluded'] == 'yes') {
            $wishes = '<p>Your response was not considered for evaluation</p>';
            $pdf->SetLeftMargin(15);
            $pdf->writeHTML($wishes, true, false, true, false, '');
        }

        //if(trim($result['distribution_date'])!=""){
        //    $result['distribution_date']=$general->humanDateFormat($result['distribution_date']);
        //}
        if (trim($result['evaluationComments']) != "" || trim($result['optional_eval_comment']) != "") {
            $comment = '<table border="1" style="width:100%;font-size:12px;" cellpadding="3">';

            if (trim($result['evaluationComments']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Evaluation Comments </td>';
                $comment .= '<td style="width:70%;">' . $result['evaluationComments'] . '</td>';
                $comment .= '</tr>';
            }

            if (trim($result['optional_eval_comment']) != "") {
                $comment .= '<tr>';
                $comment .= '<td style="font-weight:bold;width:30%;">Specific Comments/Feedback</td>';
                $comment .= '<td style="width:70%;">' . $result['optional_eval_comment'] . '</td>';
                $comment .= '</tr>';
            }

            $comment .= '</table>';
            //$pdf->SetTopMargin(13);
            $pdf->writeHTML($comment, true, false, true, false, '');
        }
        $html = '<p>Thank you for participating in HIV-1 Proficiency Testing Program for Early Infant Diagnosis using Dried Blood Spot.</p>';
        if (!empty($reportComment)) {
            $html .= '<br>' . $reportComment;
        }
        $pdf->writeHTML($html, true, false, true, false, '');

        if (!empty(trim($result['shipment_comment']))) {
            $comment = '<table border="1" style="width:100%;" cellpadding="3">';

            $comment .= '<tr>';
            $comment .= '<td style="font-size:10px;font-weight:bold;" colspan="2">' . $result['shipment_comment'] . '</td>';
            $comment .= '</tr>';

            $comment .= '</table>';
            //$pdf->SetTopMargin(13);
            $pdf->writeHTML($comment, true, false, true, false, '');
        }

        $html = '<hr>';
        if (isset($resultArray['shipment'][0]['pt_co_ordinator_name']) && $resultArray['shipment'][0]['pt_co_ordinator_name'] != "") {
            $html .= '<span style="text-align:center;font-weight:normal;"><small>Report approved by ' . $resultArray['shipment'][0]['pt_co_ordinator_name'] . '</small></span>';
        }

        $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>Date of approval: ' . (isset($pdf->dateTime) ? $general->humanDateFormat($pdf->dateTime) : date('d M Y')) . '</small></span>';
        $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>This is a system generated report. No signature required</small></span>';
        $html .= '<br/><span style="text-align:center;font-weight:normal;"><small>- End of final report -</small></span>';

        $pdf->writeHTML($html, true, false, true, false, '');

        if (ob_get_contents()) {
            ob_end_clean();
        }

        //Close and output PDF document
        if (isset($result['last_name']) && trim($result['last_name']) != "") {
            $result['last_name'] = "_" . $result['last_name'];
        }

        //    if (!file_exists(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']) && !is_dir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR .'reports'. DIRECTORY_SEPARATOR.$result['shipment_code'])) {
        //        mkdir(DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports'. DIRECTORY_SEPARATOR.$result['shipment_code']);
        //    }

        $nameParts = array();
        if (!empty($result['shipment_code'])) {
            $nameParts[] = $result['shipment_code'];
        }
        if (!empty($result['unique_identifier']) && $result['unique_identifier'] != 'NULL') {
            $nameParts[] = ucfirst($result['unique_identifier']);
        }
        if (!empty($result['state']) && $result['state'] != 'NULL') {
            $nameParts[] = ucfirst($result['state']);
        }
        if (!empty($result['region']) && $result['region'] != 'NULL') {
            $nameParts[] = ucfirst($result['region']);
        }
        if (!empty($result['city']) && $result['city'] != 'NULL') {
            $nameParts[] = ucfirst($result['city']);
        }

        $fileName = implode("-", $nameParts) . "-" . $result['map_id'] . ".pdf";
        $fileName = preg_replace('/[^A-Za-z0-9.]/', '-', $fileName);
        $fileName = str_replace(" ", "-", $fileName);
        $fileName = trim(preg_replace('/-+/', '-', $fileName), '-');
        $filePath = DOWNLOADS_FOLDER . DIRECTORY_SEPARATOR . 'reports' . DIRECTORY_SEPARATOR . $result['shipment_code'] . DIRECTORY_SEPARATOR . $fileName;
        $created = $pdf->Output($filePath, "F");

        //$pdf->Output($fileName, 'I');

        $loadpdf = Zend_Pdf::load($filePath);

        foreach ($loadpdf->pages as $page) {
            $pdfExtract = $extractor->clonePage($page);
            //$pdfExtract->setFont($font, 8) ->drawText('Page '.$j.' / '.$totalPages, 280, 50);
            $pdfNew->pages[] = $pdfExtract;
        }
        $shipmentCode = $result['shipment_code'];
        $j++;
    }
}
