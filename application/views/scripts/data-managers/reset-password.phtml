<?php $csrfNamespace = new Zend_Session_Namespace('csrf');
if (isset($this->result) && !empty($this->result)) { ?>
    <script type="text/javascript">
        window.parent.closeLayoutModal();
    </script>
<?php } ?>
<link rel="stylesheet" href="<?php echo $this->baseUrl("css/toastify.min.css"); ?>" type="text/css" media="all">
<br>
<form name="resetForm" id="resetForm" method="post" action="<?php echo $this->url(array('module' => 'default', "controller" => "data-managers", "action" => "reset-password"), null, true); ?>">
    <h4 class="modal-title"><?= $this->translate->_("Reset Password"); ?> <?= $this->translate->_("for"); ?> <strong><?php echo $this->user['institute']; ?> ( <?php echo $this->user['primary_email']; ?> )</strong></h4><br />
    <div class="form-group">
        <label for="inputEmail"><?= $this->translate->_("New Password"); ?></label>
        <input type="password" pattern=".{<?php echo $this->passLength ?? 8; ?>,}" id="password" name="password" class="form-control ppwd isPassword" title="<?= $this->translate->_("Please enter a valid password and should minimum length of " . $this->passLength ?? 8); ?>" placeholder="New Password" autofocus />
    </div>
    <div class="form-group">
        <label for="inputEmail"><?= $this->translate->_("Repeat Password"); ?></label>
        <input type="password" id="confirmPassword" name="confirmPassword" class="confirmPassword form-control" title="Please enter your confim password" placeholder="Confim password" />
    </div>
    <button type="button" id="generatePassword" onclick="passwordType();" class="btn btn-default"><b><?= $this->translate->_("Generate Random Password"); ?></b></button><br>
    <input type="hidden" id="dmId" name="dmId" value="<?php echo $this->user['dm_id']; ?>" />
    <input type="hidden" id="csrf_token" name="csrf_token" value="<?php echo $csrfNamespace->token; ?>" />
    <input type="hidden" id="primaryMail" name="primaryMail" value="<?php echo $this->user['primary_email']; ?>" />
    <code><?= _("Password must be at least 12 characters long and must include AT LEAST one number, <br>one alphabet and may have special characters.") ?></code><br>
    <input name="submitbtn" class="btn btn-primary" type="submit" onclick="validateNow();return false;" tabindex="7" value="<?= $this->translate->_("Reset Password"); ?>" />
    <button type="button" id="closeModel" onclick="window.parent.closeLayoutModal();" class="btn btn-warning"><b><?= $this->translate->_("Cancel"); ?></b></button><br>
</form>
<script type="text/javascript" src="<?php echo $this->baseUrl('js/toastify-js'); ?>"></script>
<?php require_once WEB_ROOT . '/js/main.js.php'; ?>
<script type="text/javascript">
    pwdflag = true;

    function validateNow() {
        flag = deforayValidator.init({
            formId: 'resetForm'
        });
        if (flag) {
            $.blockUI();
            document.getElementById('resetForm').submit();
        }
    }

    function savePassword() {
        if ($('.ppwd').val() != '' && $('#confirmPassword').val() != '') {
            if ($('.ppwd').val() == $('#confirmPassword').val()) {
                pwdflag = checkPasswordLength();
            } else {
                alert("Password and Repeat password should match.");
                return false;
            }
        } else {
            alert("Please enter both Password and Repeat password to proceed.");
            return false;
        }
        if (pwdflag) {
            $.post("<?php echo $this->url(array('module' => 'default', 'controller' => 'data-managers', 'action' => 'save-password', 'format' => 'html')); ?>", {
                    password: $("#password").val(),
                    primaryMail: $("#primaryMail").val()
                },
                function(data) {
                    if (data) {
                        $('#savePassword').attr('disabled', true);
                        window.parent.closeLayoutModal()
                        Toastify({
                            text: "Password saved successfully",
                            duration: 3000,
                        }).showToast();
                    }
                });
        }
    }

    function passwordType() {
        document.getElementById('password').type = "text";
        document.getElementById('confirmPassword').type = "text";
        $.post("<?php echo $this->url(array('module' => 'default', 'controller' => 'common', 'action' => 'generate-password', 'format' => 'html')); ?>", {
                csrf_token: $("#csrf_token").val(),
                size: 32
            },
            function(data) {
                // alert(data);
                $("#password").val(data);
                $("#confirmPassword").val(data);
                var cpy = copyToClipboard(document.getElementById("confirmPassword"));
                if (cpy == true) {
                    $('#savePassword').attr('disabled', false);
                    Toastify({
                        text: "Random password generated and copied to clipboard",
                        duration: 3000,
                    }).showToast();
                }
            });
    }

    function copyToClipboard(elem) {
        // create hidden text element, if it doesn't already exist
        var targetId = "_hiddenCopyText_";
        var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
        var origSelectionStart, origSelectionEnd;
        if (isInput) {
            // can just use the original source element for the selection and copy
            target = elem;
            origSelectionStart = elem.selectionStart;
            origSelectionEnd = elem.selectionEnd;
        } else {
            // must use a temporary form element for the selection and copy
            target = document.getElementById(targetId);
            if (!target) {
                var target = document.createElement("textarea");
                target.style.position = "absolute";
                target.style.left = "-9999px";
                target.style.top = "0";
                target.id = targetId;
                document.body.appendChild(target);
            }
            target.textContent = elem.textContent;
        }
        // select the content
        var currentFocus = document.activeElement;
        target.focus();
        target.setSelectionRange(0, target.value.length);

        // copy the selection
        var succeed;
        try {
            succeed = document.execCommand("copy");
        } catch (e) {
            succeed = false;
        }
        // restore original focus
        if (currentFocus && typeof currentFocus.focus === "function") {
            currentFocus.focus();
        }

        if (isInput) {
            // restore prior selection
            elem.setSelectionRange(origSelectionStart, origSelectionEnd);
        } else {
            // clear temporary content
            target.textContent = "";
        }
        return succeed;
    }

    function checkPasswordLength() {
        var pwd = $('#confirmPassword').val();
        var regex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9!@#\$%\^\&*\)\(+=. _-]+){8,}$/;
        if (regex.test(pwd) == false) {
            alert("<?= _("Password must be at least 8 characters long and must include AT LEAST one number, one alphabet and may have special characters.") ?>");
            $('.ppwd').focus();
        }
        return regex.test(pwd);
    }

    function validPassword() {
        if ($('#password').val() != '') {
            $.post("<?php echo $this->url(array('module' => 'default', 'controller' => 'common', 'action' => 'validate-password')); ?>", {
                    name: "",
                    email: $('#primaryMail').val(),
                    password: $('#password').val(),
                    format: "html"
                },
                function(data) {
                    if (data == 'success') {
                        savePassword();
                    }
                    if (data != 'success') {
                        alert(data);
                        return false;
                    }
                });
        } else {
            savePassword();
        }
    }
</script>