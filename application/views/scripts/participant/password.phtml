<?php
$authNameSpace = new Zend_Session_Namespace('datamanagers');
// At the top of your controller or page
$forceProfileConfirmation = (isset($authNameSpace->forcePasswordReset) && $authNameSpace->forcePasswordReset == 1);
$step = isset($_POST['step']) ? $_POST['step'] : ($forceProfileConfirmation ? 'profile' : 'password');
$profileConfirmed = isset($_SESSION['profile_confirmed']) ? $_SESSION['profile_confirmed'] : !$forceProfileConfirmation;

// Handle cleanup session request
if (isset($_POST['action']) && $_POST['action'] == 'cleanup_session') {
	unset($_SESSION['profile_confirmed']);
	session_destroy();
	exit();
}

// Handle reset profile confirmation
if (isset($_POST['action']) && $_POST['action'] == 'reset_profile_confirmation') {
	unset($_SESSION['profile_confirmed']);
	header('Location: ' . $this->url(array("controller" => "auth", "action" => "logout"), null, true));
	exit();
}

// Handle profile confirmation
if (isset($_POST['confirm_profile'])) {
	$_SESSION['profile_confirmed'] = true;
	$profileConfirmed = true;
	$step = 'password';
}

// Handle password change
if (isset($_POST['submitbtn']) && $profileConfirmed) {
	try {
		// Your existing password change logic here
		// ... your password change logic ...

		// After successful password change, clear the session and redirect
		if ($forceProfileConfirmation) {
			unset($_SESSION['profile_confirmed']);
		}
		// Redirect to success page or dashboard
		header('Location: ' . $this->url(array("controller" => "participant", "action" => "dashboard"), null, true));
		exit();
	} catch (Exception $e) {
		// If password change fails, logout for security
		error_log("Password change failed for user: " . $this->rsUser['dm_id'] . " Error: " . $e->getMessage());
		if ($forceProfileConfirmation) {
			unset($_SESSION['profile_confirmed']);
		}
		header('Location: ' . $this->url(array("controller" => "auth", "action" => "logout"), null, true));
		exit();
	}
}

// Auto-logout if user tries to access password change without profile confirmation (only when forced)
if ($forceProfileConfirmation && $step == 'password' && !$profileConfirmed) {
	header('Location: ' . $this->url(array("controller" => "auth", "action" => "logout"), null, true));
	exit();
}

// Set session expiry for security (10 minutes) - only when profile confirmation is forced
if ($forceProfileConfirmation) {
	if (!isset($_SESSION['profile_change_start_time'])) {
		$_SESSION['profile_change_start_time'] = time();
	} elseif (time() - $_SESSION['profile_change_start_time'] > 600) { // 10 minutes
		unset($_SESSION['profile_confirmed']);
		unset($_SESSION['profile_change_start_time']);
		header('Location: ' . $this->url(array("controller" => "auth", "action" => "logout"), null, true));
		exit();
	}
}
?>

<section class="content-header">
	<h1>
		<?php if ($forceProfileConfirmation && !$profileConfirmed): ?>
			<?= $this->translate->_("Confirm Profile Details"); ?>
		<?php else: ?>
			<?= $this->translate->_("Change Password"); ?>
		<?php endif; ?>
	</h1>
</section>

<section class="content">
	<div class="box">
		<div class="box-body">
			<?php if ($forceProfileConfirmation && !$profileConfirmed): ?>
				<!-- STEP 1: Profile Confirmation -->
				<div class="alert alert-info">
					<strong><?= $this->translate->_("Please confirm your profile details before changing your password"); ?></strong>
				</div>

				<form name="profileConfirm" id="profileConfirm" method="post" action="">
					<input type="hidden" name="step" value="profile" />
					<div class="row">
						<!-- /.col -->
						<div class="col-md-12">
							<div class="card">
								<div class="card-body">
									<div class="active tab-pane table-responsive" id="activity">
										<?php if (count($this->rsUsersProfile) >= 2) { ?>
											<h4 class="text-muted text-center">Available Participants List</h4>
											<table id="participantsTable" class="table table-striped table-bordered">
												<thead>
													<tr>
														<th><?= $this->translate->_("Lab Name"); ?></th>
														<th><?= $this->translate->_("Institute"); ?></th>
														<th><?= $this->translate->_("Department"); ?></th>
														<th><?= $this->translate->_("Participant ID"); ?></th>
														<th><?= $this->translate->_("Particpant Name"); ?></th>
														<th><?= $this->translate->_("Particpant Mobile"); ?></th>
														<th><?= $this->translate->_("Participant e-mail"); ?></th>
														<th><?= $this->translate->_("City"); ?></th>
														<th><?= $this->translate->_("Region"); ?></th>
													</tr>
												</thead>

												<?php $i_count = 0;
												foreach ($this->rsUsersProfile as $tester) { ?>
													<tr class="<?php echo ($i_count % 2) ?   'dark' : 'light';
																$i_count++; ?>">
														<td><?php echo $tester['lab_name']; ?></td>
														<td><?php echo $tester['institute_name']; ?></td>
														<td><?php echo $tester['department_name']; ?></td>
														<td><?php echo $tester['unique_identifier']; ?></td>
														<td><?php echo $tester['first_name'] . ' ' . $tester['last_name']; ?></td>
														<td><?php echo $tester['phone']; ?></td>
														<td><?php echo $tester['email']; ?></td>
														<td><?php echo $tester['city']; ?></td>
														<td><?php echo $tester['region']; ?></td>
													</tr>
												<?php } ?>
											</table>
										<?php } else { ?>
											<ul class="list-group list-group-unbordered mb-3">
												<?php if (isset($this->rsUsersProfile[0]['lab_name']) && !empty($this->rsUsersProfile[0]['lab_name'])) { ?>
													<li class="list-group-item">
														<b>Lab Name : </b><?php echo $this->rsUsersProfile[0]['lab_name']; ?>
													</li>
												<?php }
												if (isset($this->rsUsersProfile[0]['institute_name']) && !empty($this->rsUsersProfile[0]['institute_name'])) { ?>
													<li class="list-group-item">
														<b>Institute Name : </b><?php echo $this->rsUsersProfile[0]['institute_name']; ?>
													</li>
												<?php }
												if (isset($this->rsUsersProfile[0]['department_name']) && !empty($this->rsUsersProfile[0]['department_name'])) { ?>
													<li class="list-group-item">
														<b>Department Name : </b><?php echo $this->rsUsersProfile[0]['department_name']; ?>
													</li>
												<?php } ?>
												<li class="list-group-item">
													<b>Name : </b> <span class="float-right"><?php echo $this->rsUsersProfile[0]['first_name'] . ' ' . $this->rsUsersProfile[0]['last_name'] . '(' . $this->rsUsersProfile[0]['unique_identifier'] . ')'; ?></span>
												</li>
												<li class="list-group-item">
													<b>Participant Email : </b> <span class="float-right"><?php echo $this->rsUsersProfile[0]['email']; ?></span>
												</li>
												<?php if (isset($this->rsUsersProfile[0]['phone']) && !empty($this->rsUsersProfile[0]['phone'])) { ?>
													<li class="list-group-item">
														<b>Phone Number : </b><?php echo $this->rsUsersProfile[0]['phone']; ?>
													</li>
												<?php }
												if (isset($this->rsUsersProfile[0]['city']) && !empty($this->rsUsersProfile[0]['city'])) { ?>
													<li class="list-group-item">
														<b>City : </b><?php echo $this->rsUsersProfile[0]['city']; ?>
													</li>
												<?php }
												if (isset($this->rsUsersProfile[0]['region']) && !empty($this->rsUsersProfile[0]['region'])) { ?>
													<li class="list-group-item">
														<b>Region : </b><?php echo $this->rsUsersProfile[0]['region']; ?>
													</li>
												<?php } ?>
											</ul>
										<?php } ?>
									</div>
								</div><!-- /.card-body -->
							</div>
							<!-- /.card -->
						</div>
						<!-- /.col -->
					</div>
					<!-- /.row -->
					<br>
					<div id="respond" style="margin: 0px auto 0px auto; text-align: center;">
						<p>
							<input name="confirm_profile" class="btn btn-primary" type="submit" tabindex="7"
								value="<?= $this->translate->_("Confirm Profile & Continue to Password Change"); ?>" onclick="location.reload();" />
							&nbsp;&nbsp;&nbsp;
							<input name="cancel" class="btn btn-warning" type="button" tabindex="8"
								value="<?= $this->translate->_("Cancel"); ?>"
								onclick="cancelProfileConfirmation();" />
						</p>
					</div>
				</form>

			<?php else: ?>
				<!-- PASSWORD CHANGE (Either Step 2 after profile confirmation OR Direct access when not forced) -->
				<?php if ($forceProfileConfirmation): ?>
					<div class="alert alert-success">
						<strong><?= $this->translate->_("Profile confirmed! Now you can change your password."); ?></strong>
					</div>
				<?php endif; ?>

				<form name="passwordChange" id="passwordChange" method="post" action="<?php echo $this->url(array("controller" => "participant", "action" => "password"), null, true) ?>">
					<input type="hidden" name="step" value="password" />

					<table class="table table-striped">
						<tr align="left" class="light">
							<td><?= $this->translate->_("Old Password"); ?></td>
							<td>
								<input id="oldpassword" type="password" name="oldpassword" size="50" maxlength="45"
									value="" class="isRequired form-control"
									title="Please enter your current password"
									placeholder="Please enter your current password" />
							</td>
						</tr>

						<tr align="left" class="light">
							<td><?= $this->translate->_("New Password"); ?></td>
							<td>
								<input id="newpassword1" type="password"
									pattern=".{<?php echo $this->passLength ?? 8; ?>,}"
									name="newpassword" size="50" maxlength="45" value=""
									class="isRequired form-control"
									title="<?= $this->translate->_("Please enter a valid password and should minimum length of " . ($this->passLength ?? 8)); ?>"
									placeholder="Please enter your new password" />
							</td>
						</tr>

						<tr align="left" class="light">
							<td><?= $this->translate->_("Confirm New Password"); ?></td>
							<td>
								<input type="password" id="newpassword2" name="newpassword2" size="50" maxlength="45"
									value="" class="isRequired confirmPassword form-control"
									title="Please repeat the same password"
									placeholder="Please repeat the same password" />
							</td>
						</tr>
					</table>

					<br>
					<div id="respond" style="margin: 0px auto 0px auto; text-align: center;">
						<p>
							<input name="submitbtn" class="btn btn-primary" type="button" tabindex="7"
								value="<?= $this->translate->_("Change Password"); ?>"
								onclick="validPassword();return false;" />
							&nbsp;&nbsp;&nbsp;
							<input name="cancel" class="btn btn-warning" type="button" tabindex="9"
								value="<?= $this->translate->_("Cancel"); ?>"
								onclick="cancelPasswordChange();" />
						</p>
					</div>
				</form>
			<?php endif; ?>
		</div>
	</div>
</section>

<script>
	$(document).ready(function() {
		$('#participantsTable').dataTable({
			"oLanguage": {
				"sLengthMenu": "_MENU_ records per page"
			},
			"bJQueryUI": false,
			"bAutoWidth": false,
			"bInfo": true,
			"bScrollCollapse": true,
			"sPaginationType": "full_numbers",
			"bRetrieve": true,

		});
	});
	// Password validation function (your existing function)
	function validateChangePassword() {
		if ($('#oldpassword').val() == $('#newpassword1').val()) {
			alert('<?= $this->translate->_("You are typed old password. Kindly enter something else."); ?>');
			return false;
		}

		if ($('#newpassword1').val() != $('#newpassword2').val()) {
			alert('<?= $this->translate->_("New passwords do not match. Please try again."); ?>');
			return false;
		}

		var flag = deforayValidator.init({
			formId: 'passwordChange'
		});

		if (flag) {
			$.blockUI();
			// Add timeout for password change submission
			var submitTimeout = setTimeout(function() {
				$.unblockUI();
				alert('<?= $this->translate->_("Password change timed out. You will be logged out for security reasons."); ?>');
				window.location.href = '<?php echo $this->url(array("controller" => "auth", "action" => "logout"), null, true) ?>';
			}, 30000); // 30 second timeout

			document.getElementById('passwordChange').submit();

			// Clear timeout if form submits successfully
			$(document).ajaxComplete(function() {
				clearTimeout(submitTimeout);
			});
		}
	}

	// Password validation with server check (your existing function)
	function validPassword() {
		if ($('#newpassword1').val() != '') {
			$.post("<?php echo $this->url(array('module' => 'default', 'controller' => 'common', 'action' => 'validate-password')); ?>", {
						name: "",
						email: "",
						password: $('#newpassword1').val(),
						format: "html"
					},
					function(data) {
						if (data == 'success') {
							validateChangePassword();
						}
						if (data != 'success') {
							alert(data);
							return false;
						}
					})
				.fail(function() {
					alert('<?= $this->translate->_("Password validation failed. You will be logged out for security reasons."); ?>');
					setTimeout(function() {
						window.location.href = '<?php echo $this->url(array("controller" => "auth", "action" => "logout"), null, true) ?>';
					}, 2000);
				});
		} else {
			validateChangePassword();
		}
	}

	// Cancel password change
	function cancelPasswordChange() {
		<?php if ($forceProfileConfirmation): ?>
			if (confirm('<?= $this->translate->_("Are you sure you want to cancel password change? If yes then you need to login with your PT account."); ?>')) {
				window.location.href = '<?php echo $this->url(array("controller" => "auth", "action" => "logout"), null, true) ?>';
			}
		<?php else: ?>
			if (confirm('<?= $this->translate->_("Are you sure you want to cancel password change?"); ?>')) {
				window.history.back();
			}
		<?php endif; ?>
	}

	// Cancel profile confirmation
	function cancelProfileConfirmation() {
		<?php if ($forceProfileConfirmation): ?>
			if (confirm('<?= $this->translate->_("Are you sure you want to cancel profile confirmation? If yes then you need to login with your PT account."); ?>')) {
				window.location.href = '<?php echo $this->url(array("controller" => "auth", "action" => "logout"), null, true) ?>';
			}
		<?php else: ?>
			window.history.back();
		<?php endif; ?>
	}

	// Resend verification email function (your existing function)
	function reSentVerifyMail(email) {
		// Your existing resend verification logic
		$.post("<?php echo $this->url(array('controller' => 'participant', 'action' => 'resend-verification')); ?>", {
				email: email
			}, function(data) {
				if (data.status == 'success') {
					$('.alert-success').show();
				}
			}, 'json')
			.fail(function() {
				alert('<?= $this->translate->_("Failed to resend verification email. Please try again later."); ?>');
			});
	}

	// Auto logout on page unload if profile not confirmed (security measure) - only when forced
	<?php if ($forceProfileConfirmation): ?>
		window.addEventListener('beforeunload', function(e) {
			if (!<?php echo $profileConfirmed ? 'true' : 'false'; ?>) {
				// Clean up session on page leave
				navigator.sendBeacon("<?php echo $this->url(array('controller' => 'participant', 'action' => 'cleanup-session')); ?>",
					new FormData());
			}
		});

		// Session timeout for security
		var sessionTimeout;
		var timeoutDuration = 10 * 60 * 1000; // 10 minutes

		function resetSessionTimeout() {
			clearTimeout(sessionTimeout);
			sessionTimeout = setTimeout(function() {
				alert('<?= $this->translate->_("Session expired for security reasons. You will be logged out."); ?>');
				window.location.href = '<?php echo $this->url(array("controller" => "auth", "action" => "logout"), null, true) ?>';
			}, timeoutDuration);
		}

		// Initialize session timeout
		resetSessionTimeout();

		// Reset timeout on user activity
		document.addEventListener('click', resetSessionTimeout);
		document.addEventListener('keypress', resetSessionTimeout);
		document.addEventListener('scroll', resetSessionTimeout);
	<?php endif; ?>
</script>